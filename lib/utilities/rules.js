"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rulesAsString = rulesAsString;
exports.ruleMapFromRules = ruleMapFromRules;
exports.startRuleFromRules = startRuleFromRules;
exports.rulesFromStartRuleAndRuleMap = rulesFromStartRuleAndRuleMap;

var _necessary = require("necessary");

var first = _necessary.arrayUtilities.first,
    filter = _necessary.arrayUtilities.filter;

function rulesAsString(rules, multiLine) {
  var maximumRuleNameLength = rules.reduce(function (maximumRuleNameLength, rule) {
    var ruleName = rule.getName(),
        ruleNameLength = ruleName.length;
    maximumRuleNameLength = Math.max(maximumRuleNameLength, ruleNameLength);
    return maximumRuleNameLength;
  }, 0),
      rulesString = rules.reduce(function (rulesString, rule) {
    var ruleString = rule.asString(maximumRuleNameLength, multiLine);
    rulesString += ruleString;
    return rulesString;
  }, "").replace(/^\n\n/, "");
  return rulesString;
}

function ruleMapFromRules(rules) {
  var ruleMap = rules.reduce(function (ruleMap, rule) {
    var ruleName = rule.getName();
    ruleMap[ruleName] = rule;
    return ruleMap;
  }, {});
  return ruleMap;
}

function startRuleFromRules(rules) {
  var firstRule = first(rules),
      startRule = firstRule; ///

  return startRule;
}

function rulesFromStartRuleAndRuleMap(startRule, ruleMap) {
  var rules = Object.values(ruleMap),
      startRuleName = startRule.getName();
  filter(rules, function (rule) {
    var ruleName = rule.getName();

    if (ruleName !== startRuleName) {
      return true;
    }
  });
  rules.unshift(startRule);
  return rules;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bGVzLmpzIl0sIm5hbWVzIjpbImZpcnN0IiwiYXJyYXlVdGlsaXRpZXMiLCJmaWx0ZXIiLCJydWxlc0FzU3RyaW5nIiwicnVsZXMiLCJtdWx0aUxpbmUiLCJtYXhpbXVtUnVsZU5hbWVMZW5ndGgiLCJyZWR1Y2UiLCJydWxlIiwicnVsZU5hbWUiLCJnZXROYW1lIiwicnVsZU5hbWVMZW5ndGgiLCJsZW5ndGgiLCJNYXRoIiwibWF4IiwicnVsZXNTdHJpbmciLCJydWxlU3RyaW5nIiwiYXNTdHJpbmciLCJyZXBsYWNlIiwicnVsZU1hcEZyb21SdWxlcyIsInJ1bGVNYXAiLCJzdGFydFJ1bGVGcm9tUnVsZXMiLCJmaXJzdFJ1bGUiLCJzdGFydFJ1bGUiLCJydWxlc0Zyb21TdGFydFJ1bGVBbmRSdWxlTWFwIiwiT2JqZWN0IiwidmFsdWVzIiwic3RhcnRSdWxlTmFtZSIsInVuc2hpZnQiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBRUE7O0lBRVFBLEssR0FBa0JDLHlCLENBQWxCRCxLO0lBQU9FLE0sR0FBV0QseUIsQ0FBWEMsTTs7QUFFUixTQUFTQyxhQUFULENBQXVCQyxLQUF2QixFQUE4QkMsU0FBOUIsRUFBeUM7QUFDOUMsTUFBTUMscUJBQXFCLEdBQUdGLEtBQUssQ0FBQ0csTUFBTixDQUFhLFVBQUNELHFCQUFELEVBQXdCRSxJQUF4QixFQUFpQztBQUNwRSxRQUFNQyxRQUFRLEdBQUdELElBQUksQ0FBQ0UsT0FBTCxFQUFqQjtBQUFBLFFBQ01DLGNBQWMsR0FBR0YsUUFBUSxDQUFDRyxNQURoQztBQUdBTixJQUFBQSxxQkFBcUIsR0FBR08sSUFBSSxDQUFDQyxHQUFMLENBQVNSLHFCQUFULEVBQWdDSyxjQUFoQyxDQUF4QjtBQUVBLFdBQU9MLHFCQUFQO0FBQ0QsR0FQdUIsRUFPckIsQ0FQcUIsQ0FBOUI7QUFBQSxNQVFNUyxXQUFXLEdBQUdYLEtBQUssQ0FBQ0csTUFBTixDQUFhLFVBQUNRLFdBQUQsRUFBY1AsSUFBZCxFQUF1QjtBQUNoRCxRQUFNUSxVQUFVLEdBQUdSLElBQUksQ0FBQ1MsUUFBTCxDQUFjWCxxQkFBZCxFQUFxQ0QsU0FBckMsQ0FBbkI7QUFFQVUsSUFBQUEsV0FBVyxJQUFJQyxVQUFmO0FBRUEsV0FBT0QsV0FBUDtBQUNELEdBTmEsRUFNWCxFQU5XLEVBTVBHLE9BTk8sQ0FNQyxPQU5ELEVBTVUsRUFOVixDQVJwQjtBQWdCQSxTQUFPSCxXQUFQO0FBQ0Q7O0FBRU0sU0FBU0ksZ0JBQVQsQ0FBMEJmLEtBQTFCLEVBQWlDO0FBQ3RDLE1BQU1nQixPQUFPLEdBQUdoQixLQUFLLENBQUNHLE1BQU4sQ0FBYSxVQUFDYSxPQUFELEVBQVVaLElBQVYsRUFBbUI7QUFDOUMsUUFBTUMsUUFBUSxHQUFHRCxJQUFJLENBQUNFLE9BQUwsRUFBakI7QUFFQVUsSUFBQUEsT0FBTyxDQUFDWCxRQUFELENBQVAsR0FBb0JELElBQXBCO0FBRUEsV0FBT1ksT0FBUDtBQUNELEdBTmUsRUFNYixFQU5hLENBQWhCO0FBUUEsU0FBT0EsT0FBUDtBQUNEOztBQUVNLFNBQVNDLGtCQUFULENBQTRCakIsS0FBNUIsRUFBbUM7QUFDeEMsTUFBTWtCLFNBQVMsR0FBR3RCLEtBQUssQ0FBQ0ksS0FBRCxDQUF2QjtBQUFBLE1BQ01tQixTQUFTLEdBQUdELFNBRGxCLENBRHdDLENBRVY7O0FBRTlCLFNBQU9DLFNBQVA7QUFDRDs7QUFFTSxTQUFTQyw0QkFBVCxDQUFzQ0QsU0FBdEMsRUFBaURILE9BQWpELEVBQTBEO0FBQy9ELE1BQU1oQixLQUFLLEdBQUdxQixNQUFNLENBQUNDLE1BQVAsQ0FBY04sT0FBZCxDQUFkO0FBQUEsTUFDTU8sYUFBYSxHQUFHSixTQUFTLENBQUNiLE9BQVYsRUFEdEI7QUFHQVIsRUFBQUEsTUFBTSxDQUFDRSxLQUFELEVBQVEsVUFBQ0ksSUFBRCxFQUFVO0FBQ3RCLFFBQU1DLFFBQVEsR0FBR0QsSUFBSSxDQUFDRSxPQUFMLEVBQWpCOztBQUVBLFFBQUlELFFBQVEsS0FBS2tCLGFBQWpCLEVBQWdDO0FBQzlCLGFBQU8sSUFBUDtBQUNEO0FBQ0YsR0FOSyxDQUFOO0FBUUF2QixFQUFBQSxLQUFLLENBQUN3QixPQUFOLENBQWNMLFNBQWQ7QUFFQSxTQUFPbkIsS0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGFycmF5VXRpbGl0aWVzIH0gZnJvbSBcIm5lY2Vzc2FyeVwiO1xuXG5jb25zdCB7IGZpcnN0LCBmaWx0ZXIgfSA9IGFycmF5VXRpbGl0aWVzO1xuXG5leHBvcnQgZnVuY3Rpb24gcnVsZXNBc1N0cmluZyhydWxlcywgbXVsdGlMaW5lKSB7XG4gIGNvbnN0IG1heGltdW1SdWxlTmFtZUxlbmd0aCA9IHJ1bGVzLnJlZHVjZSgobWF4aW11bVJ1bGVOYW1lTGVuZ3RoLCBydWxlKSA9PiB7XG4gICAgICAgICAgY29uc3QgcnVsZU5hbWUgPSBydWxlLmdldE5hbWUoKSxcbiAgICAgICAgICAgICAgICBydWxlTmFtZUxlbmd0aCA9IHJ1bGVOYW1lLmxlbmd0aDtcblxuICAgICAgICAgIG1heGltdW1SdWxlTmFtZUxlbmd0aCA9IE1hdGgubWF4KG1heGltdW1SdWxlTmFtZUxlbmd0aCwgcnVsZU5hbWVMZW5ndGgpO1xuXG4gICAgICAgICAgcmV0dXJuIG1heGltdW1SdWxlTmFtZUxlbmd0aDtcbiAgICAgICAgfSwgMCksXG4gICAgICAgIHJ1bGVzU3RyaW5nID0gcnVsZXMucmVkdWNlKChydWxlc1N0cmluZywgcnVsZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHJ1bGVTdHJpbmcgPSBydWxlLmFzU3RyaW5nKG1heGltdW1SdWxlTmFtZUxlbmd0aCwgbXVsdGlMaW5lKTtcblxuICAgICAgICAgIHJ1bGVzU3RyaW5nICs9IHJ1bGVTdHJpbmc7XG5cbiAgICAgICAgICByZXR1cm4gcnVsZXNTdHJpbmc7XG4gICAgICAgIH0sIFwiXCIpLnJlcGxhY2UoL15cXG5cXG4vLCBcIlwiKTtcblxuICByZXR1cm4gcnVsZXNTdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlTWFwRnJvbVJ1bGVzKHJ1bGVzKSB7XG4gIGNvbnN0IHJ1bGVNYXAgPSBydWxlcy5yZWR1Y2UoKHJ1bGVNYXAsIHJ1bGUpID0+IHtcbiAgICBjb25zdCBydWxlTmFtZSA9IHJ1bGUuZ2V0TmFtZSgpO1xuXG4gICAgcnVsZU1hcFtydWxlTmFtZV0gPSBydWxlO1xuXG4gICAgcmV0dXJuIHJ1bGVNYXA7XG4gIH0sIHt9KTtcblxuICByZXR1cm4gcnVsZU1hcDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0UnVsZUZyb21SdWxlcyhydWxlcykge1xuICBjb25zdCBmaXJzdFJ1bGUgPSBmaXJzdChydWxlcyksXG4gICAgICAgIHN0YXJ0UnVsZSA9IGZpcnN0UnVsZTsgIC8vL1xuXG4gIHJldHVybiBzdGFydFJ1bGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlc0Zyb21TdGFydFJ1bGVBbmRSdWxlTWFwKHN0YXJ0UnVsZSwgcnVsZU1hcCkge1xuICBjb25zdCBydWxlcyA9IE9iamVjdC52YWx1ZXMocnVsZU1hcCksXG4gICAgICAgIHN0YXJ0UnVsZU5hbWUgPSBzdGFydFJ1bGUuZ2V0TmFtZSgpO1xuXG4gIGZpbHRlcihydWxlcywgKHJ1bGUpID0+IHtcbiAgICBjb25zdCBydWxlTmFtZSA9IHJ1bGUuZ2V0TmFtZSgpO1xuXG4gICAgaWYgKHJ1bGVOYW1lICE9PSBzdGFydFJ1bGVOYW1lKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0pO1xuXG4gIHJ1bGVzLnVuc2hpZnQoc3RhcnRSdWxlKTtcblxuICByZXR1cm4gcnVsZXM7XG59XG4iXX0=