"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.substituteDefinition = substituteDefinition;
exports.isRuleDirectlyLeftRecursive = isRuleDirectlyLeftRecursive;
exports.ruleFromLeftRecursiveDefinition = ruleFromLeftRecursiveDefinition;
var _directly = _interopRequireDefault(require("../definition/recursive/left/directly"));
var _indirectly = _interopRequireDefault(require("../definition/recursive/left/indirectly"));
var _implicitly = _interopRequireDefault(require("../definition/recursive/left/implicitly"));
var _class = require("../utilities/class");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function substituteDefinition(rule, definition, leftRecursiveRuleName) {}
function isRuleDirectlyLeftRecursive(rule) {
    var definitions = rule.getDefinitions(), ruleDirectlyLeftRecursive = definitions.some(function(definition) {
        var definitionDirectlyLeftRecursiveDefinition = (0, _class).isInstanceOf(definition, _directly.default);
        if (definitionDirectlyLeftRecursiveDefinition) {
            return true;
        }
    });
    return ruleDirectlyLeftRecursive;
}
function ruleFromLeftRecursiveDefinition(leftRecursiveDefinition, ruleMap) {
    var ruleName = leftRecursiveDefinition.getRuleName(), rule = ruleMap[ruleName];
    return rule;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcnVsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IERpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb24vcmVjdXJzaXZlL2xlZnQvZGlyZWN0bHlcIjtcbmltcG9ydCBJbmRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24gZnJvbSBcIi4uL2RlZmluaXRpb24vcmVjdXJzaXZlL2xlZnQvaW5kaXJlY3RseVwiO1xuaW1wb3J0IEltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiBmcm9tIFwiLi4vZGVmaW5pdGlvbi9yZWN1cnNpdmUvbGVmdC9pbXBsaWNpdGx5XCI7XG5cbmltcG9ydCB7IGlzSW5zdGFuY2VPZiB9IGZyb20gXCIuLi91dGlsaXRpZXMvY2xhc3NcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnN0aXR1dGVEZWZpbml0aW9uKHJ1bGUsIGRlZmluaXRpb24sIGxlZnRSZWN1cnNpdmVSdWxlTmFtZSkge1xuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1J1bGVEaXJlY3RseUxlZnRSZWN1cnNpdmUocnVsZSkge1xuICBjb25zdCBkZWZpbml0aW9ucyA9IHJ1bGUuZ2V0RGVmaW5pdGlvbnMoKSxcbiAgICAgICAgcnVsZURpcmVjdGx5TGVmdFJlY3Vyc2l2ZSA9IGRlZmluaXRpb25zLnNvbWUoKGRlZmluaXRpb24pID0+IHtcbiAgICAgICAgICBjb25zdCBkZWZpbml0aW9uRGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiA9IGlzSW5zdGFuY2VPZihkZWZpbml0aW9uLCBEaXJlY3RseUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uKTtcblxuICAgICAgICAgIGlmIChkZWZpbml0aW9uRGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICByZXR1cm4gcnVsZURpcmVjdGx5TGVmdFJlY3Vyc2l2ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bGVGcm9tTGVmdFJlY3Vyc2l2ZURlZmluaXRpb24obGVmdFJlY3Vyc2l2ZURlZmluaXRpb24sIHJ1bGVNYXApIHtcbiAgY29uc3QgcnVsZU5hbWUgPSBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbi5nZXRSdWxlTmFtZSgpLFxuICAgICAgICBydWxlID0gcnVsZU1hcFtydWxlTmFtZV07XG5cbiAgcmV0dXJuIHJ1bGU7XG59XG4iXSwibmFtZXMiOlsic3Vic3RpdHV0ZURlZmluaXRpb24iLCJpc1J1bGVEaXJlY3RseUxlZnRSZWN1cnNpdmUiLCJydWxlRnJvbUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uIiwicnVsZSIsImRlZmluaXRpb24iLCJsZWZ0UmVjdXJzaXZlUnVsZU5hbWUiLCJkZWZpbml0aW9ucyIsImdldERlZmluaXRpb25zIiwicnVsZURpcmVjdGx5TGVmdFJlY3Vyc2l2ZSIsInNvbWUiLCJkZWZpbml0aW9uRGlyZWN0bHlMZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiIsImlzSW5zdGFuY2VPZiIsIkRpcmVjdGx5TGVmdFJlY3Vyc2l2ZURlZmluaXRpb24iLCJsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiIsInJ1bGVNYXAiLCJydWxlTmFtZSIsImdldFJ1bGVOYW1lIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7Ozs7UUFRR0Esb0JBQW9CLEdBQXBCQSxvQkFBb0I7UUFJcEJDLDJCQUEyQixHQUEzQkEsMkJBQTJCO1FBYTNCQywrQkFBK0IsR0FBL0JBLCtCQUErQjtBQXZCSCxJQUFBLFNBQXVDLGtDQUF2Qyx1Q0FBdUMsRUFBQTtBQUNyQyxJQUFBLFdBQXlDLGtDQUF6Qyx5Q0FBeUMsRUFBQTtBQUN6QyxJQUFBLFdBQXlDLGtDQUF6Qyx5Q0FBeUMsRUFBQTtBQUUxRCxJQUFBLE1BQW9CLFdBQXBCLG9CQUFvQixDQUFBOzs7Ozs7QUFFMUMsU0FBU0Ysb0JBQW9CLENBQUNHLElBQUksRUFBRUMsVUFBVSxFQUFFQyxxQkFBcUIsRUFBRSxFQUU3RTtBQUVNLFNBQVNKLDJCQUEyQixDQUFDRSxJQUFJLEVBQUU7SUFDaEQsSUFBTUcsV0FBVyxHQUFHSCxJQUFJLENBQUNJLGNBQWMsRUFBRSxFQUNuQ0MseUJBQXlCLEdBQUdGLFdBQVcsQ0FBQ0csSUFBSSxDQUFDLFNBQUNMLFVBQVUsRUFBSztRQUMzRCxJQUFNTSx5Q0FBeUMsR0FBR0MsQ0FBQUEsR0FBQUEsTUFBWSxBQUE2QyxDQUFBLGFBQTdDLENBQUNQLFVBQVUsRUFBRVEsU0FBK0IsUUFBQSxDQUFDLEFBQUM7UUFFNUcsSUFBSUYseUNBQXlDLEVBQUU7WUFDN0MsT0FBTyxJQUFJLENBQUM7U0FDYjtLQUNGLENBQUMsQUFBQztJQUVULE9BQU9GLHlCQUF5QixDQUFDO0NBQ2xDO0FBRU0sU0FBU04sK0JBQStCLENBQUNXLHVCQUF1QixFQUFFQyxPQUFPLEVBQUU7SUFDaEYsSUFBTUMsUUFBUSxHQUFHRix1QkFBdUIsQ0FBQ0csV0FBVyxFQUFFLEVBQ2hEYixJQUFJLEdBQUdXLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDLEFBQUM7SUFFL0IsT0FBT1osSUFBSSxDQUFDO0NBQ2IifQ==