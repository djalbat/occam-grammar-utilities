'use strict';

var partUtilities = require('../utilities/part'),
    arrayUtilities = require('../utilities/array');

var isPartRuleNamePart = partUtilities.isPartRuleNamePart;
var first = arrayUtilities.first;


function isDefinitionImmediatelyLeftRecursive(definition, ruleName) {
  var definitionImmediatelyLeftRecursive = false;

  var parts = definition.getParts(),
      firstPart = first(parts),
      firstPartRuleNamePart = isPartRuleNamePart(firstPart);

  if (firstPartRuleNamePart) {
    var ruleNamePart = firstPart,
        ///
    ruleNamePartRuleName = ruleNamePart.getRuleName();

    if (ruleNamePartRuleName === ruleName) {
      definitionImmediatelyLeftRecursive = true;
    }
  }

  return definitionImmediatelyLeftRecursive;
}

function leftRecursiveRuleNameFromLeftRecursiveDefinition(leftRecursiveDefinition) {
  var parts = leftRecursiveDefinition.getParts(),
      firstPart = first(parts),
      ruleNamePart = firstPart,
      ruleName = ruleNamePart.getRuleName(),
      leftRecursiveRuleName = ruleName; ///

  return leftRecursiveRuleName;
}

module.exports = {
  isDefinitionImmediatelyLeftRecursive: isDefinitionImmediatelyLeftRecursive,
  leftRecursiveRuleNameFromLeftRecursiveDefinition: leftRecursiveRuleNameFromLeftRecursiveDefinition
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvZGVmaW5pdGlvbi5qcyJdLCJuYW1lcyI6WyJwYXJ0VXRpbGl0aWVzIiwicmVxdWlyZSIsImFycmF5VXRpbGl0aWVzIiwiaXNQYXJ0UnVsZU5hbWVQYXJ0IiwiZmlyc3QiLCJpc0RlZmluaXRpb25JbW1lZGlhdGVseUxlZnRSZWN1cnNpdmUiLCJkZWZpbml0aW9uIiwicnVsZU5hbWUiLCJkZWZpbml0aW9uSW1tZWRpYXRlbHlMZWZ0UmVjdXJzaXZlIiwicGFydHMiLCJnZXRQYXJ0cyIsImZpcnN0UGFydCIsImZpcnN0UGFydFJ1bGVOYW1lUGFydCIsInJ1bGVOYW1lUGFydCIsInJ1bGVOYW1lUGFydFJ1bGVOYW1lIiwiZ2V0UnVsZU5hbWUiLCJsZWZ0UmVjdXJzaXZlUnVsZU5hbWVGcm9tTGVmdFJlY3Vyc2l2ZURlZmluaXRpb24iLCJsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbiIsImxlZnRSZWN1cnNpdmVSdWxlTmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLGdCQUFnQkMsUUFBUSxtQkFBUixDQUF0QjtBQUFBLElBQ01DLGlCQUFpQkQsUUFBUSxvQkFBUixDQUR2Qjs7SUFHUUUsa0IsR0FBdUJILGEsQ0FBdkJHLGtCO0lBRUFDLEssR0FBVUYsYyxDQUFWRSxLOzs7QUFFUixTQUFTQyxvQ0FBVCxDQUE4Q0MsVUFBOUMsRUFBMERDLFFBQTFELEVBQW9FO0FBQ2xFLE1BQUlDLHFDQUFxQyxLQUF6Qzs7QUFFQSxNQUFNQyxRQUFRSCxXQUFXSSxRQUFYLEVBQWQ7QUFBQSxNQUNNQyxZQUFZUCxNQUFNSyxLQUFOLENBRGxCO0FBQUEsTUFFTUcsd0JBQXdCVCxtQkFBbUJRLFNBQW5CLENBRjlCOztBQUlBLE1BQUlDLHFCQUFKLEVBQTJCO0FBQ3pCLFFBQU1DLGVBQWVGLFNBQXJCO0FBQUEsUUFBZ0M7QUFDMUJHLDJCQUF1QkQsYUFBYUUsV0FBYixFQUQ3Qjs7QUFHQSxRQUFJRCx5QkFBeUJQLFFBQTdCLEVBQXVDO0FBQ3JDQywyQ0FBcUMsSUFBckM7QUFDRDtBQUNGOztBQUVELFNBQU9BLGtDQUFQO0FBQ0Q7O0FBRUQsU0FBU1EsZ0RBQVQsQ0FBMERDLHVCQUExRCxFQUFtRjtBQUNqRixNQUFNUixRQUFRUSx3QkFBd0JQLFFBQXhCLEVBQWQ7QUFBQSxNQUNNQyxZQUFZUCxNQUFNSyxLQUFOLENBRGxCO0FBQUEsTUFFTUksZUFBZUYsU0FGckI7QUFBQSxNQUdNSixXQUFXTSxhQUFhRSxXQUFiLEVBSGpCO0FBQUEsTUFJTUcsd0JBQXdCWCxRQUo5QixDQURpRixDQUt6Qzs7QUFFeEMsU0FBT1cscUJBQVA7QUFDRDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmZiw0RUFEZTtBQUVmVztBQUZlLENBQWpCIiwiZmlsZSI6ImRlZmluaXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHBhcnRVdGlsaXRpZXMgPSByZXF1aXJlKCcuLi91dGlsaXRpZXMvcGFydCcpLFxuICAgICAgYXJyYXlVdGlsaXRpZXMgPSByZXF1aXJlKCcuLi91dGlsaXRpZXMvYXJyYXknKTtcblxuY29uc3QgeyBpc1BhcnRSdWxlTmFtZVBhcnQgfSA9IHBhcnRVdGlsaXRpZXM7XG5cbmNvbnN0IHsgZmlyc3QgfSA9IGFycmF5VXRpbGl0aWVzO1xuXG5mdW5jdGlvbiBpc0RlZmluaXRpb25JbW1lZGlhdGVseUxlZnRSZWN1cnNpdmUoZGVmaW5pdGlvbiwgcnVsZU5hbWUpIHtcbiAgbGV0IGRlZmluaXRpb25JbW1lZGlhdGVseUxlZnRSZWN1cnNpdmUgPSBmYWxzZTtcblxuICBjb25zdCBwYXJ0cyA9IGRlZmluaXRpb24uZ2V0UGFydHMoKSxcbiAgICAgICAgZmlyc3RQYXJ0ID0gZmlyc3QocGFydHMpLFxuICAgICAgICBmaXJzdFBhcnRSdWxlTmFtZVBhcnQgPSBpc1BhcnRSdWxlTmFtZVBhcnQoZmlyc3RQYXJ0KTtcblxuICBpZiAoZmlyc3RQYXJ0UnVsZU5hbWVQYXJ0KSB7XG4gICAgY29uc3QgcnVsZU5hbWVQYXJ0ID0gZmlyc3RQYXJ0LCAvLy9cbiAgICAgICAgICBydWxlTmFtZVBhcnRSdWxlTmFtZSA9IHJ1bGVOYW1lUGFydC5nZXRSdWxlTmFtZSgpO1xuXG4gICAgaWYgKHJ1bGVOYW1lUGFydFJ1bGVOYW1lID09PSBydWxlTmFtZSkge1xuICAgICAgZGVmaW5pdGlvbkltbWVkaWF0ZWx5TGVmdFJlY3Vyc2l2ZSA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRlZmluaXRpb25JbW1lZGlhdGVseUxlZnRSZWN1cnNpdmU7XG59XG5cbmZ1bmN0aW9uIGxlZnRSZWN1cnNpdmVSdWxlTmFtZUZyb21MZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbihsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbikge1xuICBjb25zdCBwYXJ0cyA9IGxlZnRSZWN1cnNpdmVEZWZpbml0aW9uLmdldFBhcnRzKCksXG4gICAgICAgIGZpcnN0UGFydCA9IGZpcnN0KHBhcnRzKSxcbiAgICAgICAgcnVsZU5hbWVQYXJ0ID0gZmlyc3RQYXJ0LFxuICAgICAgICBydWxlTmFtZSA9IHJ1bGVOYW1lUGFydC5nZXRSdWxlTmFtZSgpLFxuICAgICAgICBsZWZ0UmVjdXJzaXZlUnVsZU5hbWUgPSBydWxlTmFtZTsgLy8vXG5cbiAgcmV0dXJuIGxlZnRSZWN1cnNpdmVSdWxlTmFtZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzRGVmaW5pdGlvbkltbWVkaWF0ZWx5TGVmdFJlY3Vyc2l2ZSxcbiAgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lRnJvbUxlZnRSZWN1cnNpdmVEZWZpbml0aW9uXG59O1xuIl19