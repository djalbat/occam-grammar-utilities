'use strict';

var arrayUtilities = require('../utilities/array'),
    recursivePartUtilities = require('../utilities/recursivePart');

var first = arrayUtilities.first,
    recursiveRuleNamesFromPart = recursivePartUtilities.recursiveRuleNamesFromPart,
    leftRecursiveRuleNamesFromPart = recursivePartUtilities.leftRecursiveRuleNamesFromPart;


function recursiveRuleNamesFromDefinition(definition) {
      var recursiveRuleNames = [],
          parts = definition.getParts();

      parts.forEach(function (part) {
            recursiveRuleNamesFromPart(part, recursiveRuleNames);
      });

      return recursiveRuleNames;
}

function leftRecursiveRuleNamesFromDefinition(definition) {
      var leftRecursiveRuleNames = [],
          parts = definition.getParts(),
          firstPart = first(parts),
          part = firstPart; ///

      leftRecursiveRuleNamesFromPart(part, leftRecursiveRuleNames);

      return leftRecursiveRuleNames;
}

module.exports = {
      recursiveRuleNamesFromDefinition: recursiveRuleNamesFromDefinition,
      leftRecursiveRuleNamesFromDefinition: leftRecursiveRuleNamesFromDefinition
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvZGVmaW5pdGlvbi5qcyJdLCJuYW1lcyI6WyJhcnJheVV0aWxpdGllcyIsInJlcXVpcmUiLCJyZWN1cnNpdmVQYXJ0VXRpbGl0aWVzIiwiZmlyc3QiLCJyZWN1cnNpdmVSdWxlTmFtZXNGcm9tUGFydCIsImxlZnRSZWN1cnNpdmVSdWxlTmFtZXNGcm9tUGFydCIsInJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21EZWZpbml0aW9uIiwiZGVmaW5pdGlvbiIsInJlY3Vyc2l2ZVJ1bGVOYW1lcyIsInBhcnRzIiwiZ2V0UGFydHMiLCJmb3JFYWNoIiwicGFydCIsImxlZnRSZWN1cnNpdmVSdWxlTmFtZXNGcm9tRGVmaW5pdGlvbiIsImxlZnRSZWN1cnNpdmVSdWxlTmFtZXMiLCJmaXJzdFBhcnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxpQkFBaUJDLFFBQVEsb0JBQVIsQ0FBdkI7QUFBQSxJQUNNQyx5QkFBeUJELFFBQVEsNEJBQVIsQ0FEL0I7O0FBR00sSUFBRUUsS0FBRixHQUFZSCxjQUFaLENBQUVHLEtBQUY7QUFBQSxJQUNFQywwQkFERixHQUNpRUYsc0JBRGpFLENBQ0VFLDBCQURGO0FBQUEsSUFDOEJDLDhCQUQ5QixHQUNpRUgsc0JBRGpFLENBQzhCRyw4QkFEOUI7OztBQUdOLFNBQVNDLGdDQUFULENBQTBDQyxVQUExQyxFQUFzRDtBQUNwRCxVQUFNQyxxQkFBcUIsRUFBM0I7QUFBQSxVQUNNQyxRQUFRRixXQUFXRyxRQUFYLEVBRGQ7O0FBR0FELFlBQU1FLE9BQU4sQ0FBYyxVQUFDQyxJQUFELEVBQVU7QUFDdEJSLHVDQUEyQlEsSUFBM0IsRUFBaUNKLGtCQUFqQztBQUNELE9BRkQ7O0FBSUEsYUFBT0Esa0JBQVA7QUFDRDs7QUFFRCxTQUFTSyxvQ0FBVCxDQUE4Q04sVUFBOUMsRUFBMEQ7QUFDeEQsVUFBTU8seUJBQXlCLEVBQS9CO0FBQUEsVUFDTUwsUUFBUUYsV0FBV0csUUFBWCxFQURkO0FBQUEsVUFFTUssWUFBWVosTUFBTU0sS0FBTixDQUZsQjtBQUFBLFVBR01HLE9BQU9HLFNBSGIsQ0FEd0QsQ0FJaEM7O0FBRXhCVixxQ0FBK0JPLElBQS9CLEVBQXFDRSxzQkFBckM7O0FBRUEsYUFBT0Esc0JBQVA7QUFDRDs7QUFFREUsT0FBT0MsT0FBUCxHQUFpQjtBQUNmWCx3RUFEZTtBQUVmTztBQUZlLENBQWpCIiwiZmlsZSI6ImRlZmluaXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGFycmF5VXRpbGl0aWVzID0gcmVxdWlyZSgnLi4vdXRpbGl0aWVzL2FycmF5JyksXG4gICAgICByZWN1cnNpdmVQYXJ0VXRpbGl0aWVzID0gcmVxdWlyZSgnLi4vdXRpbGl0aWVzL3JlY3Vyc2l2ZVBhcnQnKTtcblxuY29uc3QgeyBmaXJzdCB9ID0gYXJyYXlVdGlsaXRpZXMsXG4gICAgICB7IHJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21QYXJ0LCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzRnJvbVBhcnQgfSA9IHJlY3Vyc2l2ZVBhcnRVdGlsaXRpZXM7XG5cbmZ1bmN0aW9uIHJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21EZWZpbml0aW9uKGRlZmluaXRpb24pIHtcbiAgY29uc3QgcmVjdXJzaXZlUnVsZU5hbWVzID0gW10sXG4gICAgICAgIHBhcnRzID0gZGVmaW5pdGlvbi5nZXRQYXJ0cygpO1xuXG4gIHBhcnRzLmZvckVhY2goKHBhcnQpID0+IHtcbiAgICByZWN1cnNpdmVSdWxlTmFtZXNGcm9tUGFydChwYXJ0LCByZWN1cnNpdmVSdWxlTmFtZXMpO1xuICB9KTtcblxuICByZXR1cm4gcmVjdXJzaXZlUnVsZU5hbWVzO1xufVxuXG5mdW5jdGlvbiBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzRnJvbURlZmluaXRpb24oZGVmaW5pdGlvbikge1xuICBjb25zdCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzID0gW10sXG4gICAgICAgIHBhcnRzID0gZGVmaW5pdGlvbi5nZXRQYXJ0cygpLFxuICAgICAgICBmaXJzdFBhcnQgPSBmaXJzdChwYXJ0cyksXG4gICAgICAgIHBhcnQgPSBmaXJzdFBhcnQ7IC8vL1xuXG4gIGxlZnRSZWN1cnNpdmVSdWxlTmFtZXNGcm9tUGFydChwYXJ0LCBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzKTtcblxuICByZXR1cm4gbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlY3Vyc2l2ZVJ1bGVOYW1lc0Zyb21EZWZpbml0aW9uLFxuICBsZWZ0UmVjdXJzaXZlUnVsZU5hbWVzRnJvbURlZmluaXRpb25cbn07XG4iXX0=