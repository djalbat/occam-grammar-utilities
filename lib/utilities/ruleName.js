"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ruleNameFromReducedRuleName: function() {
        return ruleNameFromReducedRuleName;
    },
    ruleNameFromRepeatedRuleName: function() {
        return ruleNameFromRepeatedRuleName;
    },
    directlyReducedRuleNameFromRuleName: function() {
        return directlyReducedRuleNameFromRuleName;
    },
    directlyRepeatedRuleNameFromRuleName: function() {
        return directlyRepeatedRuleNameFromRuleName;
    },
    indirectlyReducedRuleNameFromRuleName: function() {
        return indirectlyReducedRuleNameFromRuleName;
    },
    indirectlyRepeatedRuleNameFromRuleName: function() {
        return indirectlyRepeatedRuleNameFromRuleName;
    }
});
function ruleNameFromReducedRuleName(reducedRuleName) {
    var ruleName = reducedRuleName.replace(/(__|_)$/g, "");
    return ruleName;
}
function ruleNameFromRepeatedRuleName(repeatedRuleName) {
    var ruleName = repeatedRuleName.replace(/~~|~$/, "");
    return ruleName;
}
function directlyReducedRuleNameFromRuleName(ruleName) {
    var directlyReducedRuleName = "".concat(ruleName, "_");
    return directlyReducedRuleName;
}
function directlyRepeatedRuleNameFromRuleName(ruleName) {
    var directlyRepeatedRuleName = "".concat(ruleName, "~");
    return directlyRepeatedRuleName;
}
function indirectlyReducedRuleNameFromRuleName(ruleName) {
    var indirectlyReducedRuleName = "".concat(ruleName, "__");
    return indirectlyReducedRuleName;
}
function indirectlyRepeatedRuleNameFromRuleName(ruleName) {
    var indirectlyRepeatedRuleName = "".concat(ruleName, "~~");
    return indirectlyRepeatedRuleName;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcnVsZU5hbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlTmFtZUZyb21SZWR1Y2VkUnVsZU5hbWUocmVkdWNlZFJ1bGVOYW1lKSB7XG4gIGNvbnN0IHJ1bGVOYW1lID0gcmVkdWNlZFJ1bGVOYW1lLnJlcGxhY2UoLyhfX3xfKSQvZywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcnVsZU5hbWVGcm9tUmVwZWF0ZWRSdWxlTmFtZShyZXBlYXRlZFJ1bGVOYW1lKSB7XG4gIGNvbnN0IHJ1bGVOYW1lID0gcmVwZWF0ZWRSdWxlTmFtZS5yZXBsYWNlKC9+fnx+JC8sIFwiXCIpO1xuXG4gIHJldHVybiBydWxlTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpcmVjdGx5UmVkdWNlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lKHJ1bGVOYW1lKSB7XG4gIGNvbnN0IGRpcmVjdGx5UmVkdWNlZFJ1bGVOYW1lID0gYCR7cnVsZU5hbWV9X2A7XG5cbiAgcmV0dXJuIGRpcmVjdGx5UmVkdWNlZFJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lKHJ1bGVOYW1lKSB7XG4gIGNvbnN0IGRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZSA9IGAke3J1bGVOYW1lfX5gO1xuXG4gIHJldHVybiBkaXJlY3RseVJlcGVhdGVkUnVsZU5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbmRpcmVjdGx5UmVkdWNlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lKHJ1bGVOYW1lKSB7XG4gIGNvbnN0IGluZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWUgPSBgJHtydWxlTmFtZX1fX2A7XG5cbiAgcmV0dXJuIGluZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbmRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZUZyb21SdWxlTmFtZShydWxlTmFtZSkge1xuICBjb25zdCBpbmRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZSA9IGAke3J1bGVOYW1lfX5+YDtcblxuICByZXR1cm4gaW5kaXJlY3RseVJlcGVhdGVkUnVsZU5hbWU7XG59XG4iXSwibmFtZXMiOlsicnVsZU5hbWVGcm9tUmVkdWNlZFJ1bGVOYW1lIiwicnVsZU5hbWVGcm9tUmVwZWF0ZWRSdWxlTmFtZSIsImRpcmVjdGx5UmVkdWNlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lIiwiZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lIiwiaW5kaXJlY3RseVJlZHVjZWRSdWxlTmFtZUZyb21SdWxlTmFtZSIsImluZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lIiwicmVkdWNlZFJ1bGVOYW1lIiwicnVsZU5hbWUiLCJyZXBsYWNlIiwicmVwZWF0ZWRSdWxlTmFtZSIsImRpcmVjdGx5UmVkdWNlZFJ1bGVOYW1lIiwiZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lIiwiaW5kaXJlY3RseVJlZHVjZWRSdWxlTmFtZSIsImluZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7Ozs7Ozs7Ozs7O0lBRUdBLDJCQUEyQjtlQUEzQkEsMkJBQTJCOztJQU0zQkMsNEJBQTRCO2VBQTVCQSw0QkFBNEI7O0lBTTVCQyxtQ0FBbUM7ZUFBbkNBLG1DQUFtQzs7SUFNbkNDLG9DQUFvQztlQUFwQ0Esb0NBQW9DOztJQU1wQ0MscUNBQXFDO2VBQXJDQSxxQ0FBcUM7O0lBTXJDQyxzQ0FBc0M7ZUFBdENBLHNDQUFzQzs7O0FBOUIvQyxTQUFTTCwyQkFBMkIsQ0FBQ00sZUFBZSxFQUFFO0lBQzNELElBQU1DLFFBQVEsR0FBR0QsZUFBZSxDQUFDRSxPQUFPLGFBQWEsRUFBRSxDQUFDLEFBQUM7SUFFekQsT0FBT0QsUUFBUSxDQUFDO0NBQ2pCO0FBRU0sU0FBU04sNEJBQTRCLENBQUNRLGdCQUFnQixFQUFFO0lBQzdELElBQU1GLFFBQVEsR0FBR0UsZ0JBQWdCLENBQUNELE9BQU8sVUFBVSxFQUFFLENBQUMsQUFBQztJQUV2RCxPQUFPRCxRQUFRLENBQUM7Q0FDakI7QUFFTSxTQUFTTCxtQ0FBbUMsQ0FBQ0ssUUFBUSxFQUFFO0lBQzVELElBQU1HLHVCQUF1QixHQUFHLEFBQUMsRUFBQSxDQUFXLE1BQUMsQ0FBVkgsUUFBUSxFQUFDLEdBQUMsQ0FBQyxBQUFDO0lBRS9DLE9BQU9HLHVCQUF1QixDQUFDO0NBQ2hDO0FBRU0sU0FBU1Asb0NBQW9DLENBQUNJLFFBQVEsRUFBRTtJQUM3RCxJQUFNSSx3QkFBd0IsR0FBRyxBQUFDLEVBQUEsQ0FBVyxNQUFDLENBQVZKLFFBQVEsRUFBQyxHQUFDLENBQUMsQUFBQztJQUVoRCxPQUFPSSx3QkFBd0IsQ0FBQztDQUNqQztBQUVNLFNBQVNQLHFDQUFxQyxDQUFDRyxRQUFRLEVBQUU7SUFDOUQsSUFBTUsseUJBQXlCLEdBQUcsQUFBQyxFQUFBLENBQVcsTUFBRSxDQUFYTCxRQUFRLEVBQUMsSUFBRSxDQUFDLEFBQUM7SUFFbEQsT0FBT0sseUJBQXlCLENBQUM7Q0FDbEM7QUFFTSxTQUFTUCxzQ0FBc0MsQ0FBQ0UsUUFBUSxFQUFFO0lBQy9ELElBQU1NLDBCQUEwQixHQUFHLEFBQUMsRUFBQSxDQUFXLE1BQUUsQ0FBWE4sUUFBUSxFQUFDLElBQUUsQ0FBQyxBQUFDO0lBRW5ELE9BQU9NLDBCQUEwQixDQUFDO0NBQ25DIn0=