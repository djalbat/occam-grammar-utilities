'use strict';

function nonLeftRecursiveRuleNameFromRuleName(ruleName) {
  var nonLeftRecursiveRuleName = ruleName + '_';

  return nonLeftRecursiveRuleName;
}

function nonLeftRecursiveRuleNameFromLeftRecursiveRuleName(leftRecursiveRuleName) {
  var nonLeftRecursiveRuleName = leftRecursiveRuleName + '_';

  return nonLeftRecursiveRuleName;
}

function rightRecursiveRuleNameFromRuleName(ruleName) {
  var rightRecursiveRuleName = ruleName + '~';

  return rightRecursiveRuleName;
}

function rightRecursiveRuleNameFromRecursiveRuleName(recursiveRuleName) {
  var rightRecursiveRuleName = recursiveRuleName + '~';

  return rightRecursiveRuleName;
}

function ruleNameFromNonLeftRecursiveRuleName(nonLeftRecursiveRuleName) {
  var ruleName = nonLeftRecursiveRuleName.replace(/_$/, '');

  return ruleName;
}

function checkNonLeftRecursiveRuleNameMatchesRuleName(nonLeftRecursiveRuleName, ruleName) {
  var ruleNameA = ruleName; ///

  ruleName = ruleNameFromNonLeftRecursiveRuleName(nonLeftRecursiveRuleName);

  var ruleNameB = ruleName; ///

  var nonLeftRecursiveRuleNameMatchesRuleName = ruleNameA === ruleNameB; ///

  return nonLeftRecursiveRuleNameMatchesRuleName;
}

module.exports = {
  nonLeftRecursiveRuleNameFromRuleName: nonLeftRecursiveRuleNameFromRuleName,
  nonLeftRecursiveRuleNameFromLeftRecursiveRuleName: nonLeftRecursiveRuleNameFromLeftRecursiveRuleName,
  rightRecursiveRuleNameFromRuleName: rightRecursiveRuleNameFromRuleName,
  rightRecursiveRuleNameFromRecursiveRuleName: rightRecursiveRuleNameFromRecursiveRuleName,
  ruleNameFromNonLeftRecursiveRuleName: ruleNameFromNonLeftRecursiveRuleName,
  checkNonLeftRecursiveRuleNameMatchesRuleName: checkNonLeftRecursiveRuleNameMatchesRuleName
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvcnVsZU5hbWUuanMiXSwibmFtZXMiOlsibm9uTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lRnJvbVJ1bGVOYW1lIiwicnVsZU5hbWUiLCJub25MZWZ0UmVjdXJzaXZlUnVsZU5hbWUiLCJub25MZWZ0UmVjdXJzaXZlUnVsZU5hbWVGcm9tTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lIiwibGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lIiwicmlnaHRSZWN1cnNpdmVSdWxlTmFtZUZyb21SdWxlTmFtZSIsInJpZ2h0UmVjdXJzaXZlUnVsZU5hbWUiLCJyaWdodFJlY3Vyc2l2ZVJ1bGVOYW1lRnJvbVJlY3Vyc2l2ZVJ1bGVOYW1lIiwicmVjdXJzaXZlUnVsZU5hbWUiLCJydWxlTmFtZUZyb21Ob25MZWZ0UmVjdXJzaXZlUnVsZU5hbWUiLCJyZXBsYWNlIiwiY2hlY2tOb25MZWZ0UmVjdXJzaXZlUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWUiLCJydWxlTmFtZUEiLCJydWxlTmFtZUIiLCJub25MZWZ0UmVjdXJzaXZlUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxTQUFTQSxvQ0FBVCxDQUE4Q0MsUUFBOUMsRUFBd0Q7QUFDdEQsTUFBTUMsMkJBQThCRCxRQUE5QixNQUFOOztBQUVBLFNBQU9DLHdCQUFQO0FBQ0Q7O0FBRUQsU0FBU0MsaURBQVQsQ0FBMkRDLHFCQUEzRCxFQUFrRjtBQUNoRixNQUFNRiwyQkFBOEJFLHFCQUE5QixNQUFOOztBQUVBLFNBQU9GLHdCQUFQO0FBQ0Q7O0FBRUQsU0FBU0csa0NBQVQsQ0FBNENKLFFBQTVDLEVBQXNEO0FBQ3BELE1BQU1LLHlCQUE0QkwsUUFBNUIsTUFBTjs7QUFFQSxTQUFPSyxzQkFBUDtBQUNEOztBQUVELFNBQVNDLDJDQUFULENBQXFEQyxpQkFBckQsRUFBd0U7QUFDdEUsTUFBTUYseUJBQTRCRSxpQkFBNUIsTUFBTjs7QUFFQSxTQUFPRixzQkFBUDtBQUNEOztBQUVELFNBQVNHLG9DQUFULENBQThDUCx3QkFBOUMsRUFBd0U7QUFDdEUsTUFBTUQsV0FBV0MseUJBQXlCUSxPQUF6QixDQUFpQyxJQUFqQyxFQUF1QyxFQUF2QyxDQUFqQjs7QUFFQSxTQUFPVCxRQUFQO0FBQ0Q7O0FBRUQsU0FBU1UsNENBQVQsQ0FBc0RULHdCQUF0RCxFQUFnRkQsUUFBaEYsRUFBMEY7QUFDeEYsTUFBTVcsWUFBWVgsUUFBbEIsQ0FEd0YsQ0FDNUQ7O0FBRTVCQSxhQUFXUSxxQ0FBcUNQLHdCQUFyQyxDQUFYOztBQUVBLE1BQU1XLFlBQVlaLFFBQWxCLENBTHdGLENBSzVEOztBQUU1QixNQUFNYSwwQ0FBMkNGLGNBQWNDLFNBQS9ELENBUHdGLENBT1o7O0FBRTVFLFNBQU9DLHVDQUFQO0FBQ0Q7O0FBRURDLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmhCLDRFQURlO0FBRWZHLHNHQUZlO0FBR2ZFLHdFQUhlO0FBSWZFLDBGQUplO0FBS2ZFLDRFQUxlO0FBTWZFO0FBTmUsQ0FBakIiLCJmaWxlIjoicnVsZU5hbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIG5vbkxlZnRSZWN1cnNpdmVSdWxlTmFtZUZyb21SdWxlTmFtZShydWxlTmFtZSkge1xuICBjb25zdCBub25MZWZ0UmVjdXJzaXZlUnVsZU5hbWUgPSBgJHtydWxlTmFtZX1fYDtcblxuICByZXR1cm4gbm9uTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lO1xufVxuXG5mdW5jdGlvbiBub25MZWZ0UmVjdXJzaXZlUnVsZU5hbWVGcm9tTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lKGxlZnRSZWN1cnNpdmVSdWxlTmFtZSkge1xuICBjb25zdCBub25MZWZ0UmVjdXJzaXZlUnVsZU5hbWUgPSBgJHtsZWZ0UmVjdXJzaXZlUnVsZU5hbWV9X2A7XG5cbiAgcmV0dXJuIG5vbkxlZnRSZWN1cnNpdmVSdWxlTmFtZTtcbn1cblxuZnVuY3Rpb24gcmlnaHRSZWN1cnNpdmVSdWxlTmFtZUZyb21SdWxlTmFtZShydWxlTmFtZSkge1xuICBjb25zdCByaWdodFJlY3Vyc2l2ZVJ1bGVOYW1lID0gYCR7cnVsZU5hbWV9fmA7XG5cbiAgcmV0dXJuIHJpZ2h0UmVjdXJzaXZlUnVsZU5hbWU7XG59XG5cbmZ1bmN0aW9uIHJpZ2h0UmVjdXJzaXZlUnVsZU5hbWVGcm9tUmVjdXJzaXZlUnVsZU5hbWUocmVjdXJzaXZlUnVsZU5hbWUpIHtcbiAgY29uc3QgcmlnaHRSZWN1cnNpdmVSdWxlTmFtZSA9IGAke3JlY3Vyc2l2ZVJ1bGVOYW1lfX5gO1xuXG4gIHJldHVybiByaWdodFJlY3Vyc2l2ZVJ1bGVOYW1lO1xufVxuXG5mdW5jdGlvbiBydWxlTmFtZUZyb21Ob25MZWZ0UmVjdXJzaXZlUnVsZU5hbWUobm9uTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lKSB7XG4gIGNvbnN0IHJ1bGVOYW1lID0gbm9uTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lLnJlcGxhY2UoL18kLywgJycpO1xuXG4gIHJldHVybiBydWxlTmFtZTtcbn1cblxuZnVuY3Rpb24gY2hlY2tOb25MZWZ0UmVjdXJzaXZlUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWUobm9uTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lLCBydWxlTmFtZSkge1xuICBjb25zdCBydWxlTmFtZUEgPSBydWxlTmFtZTsgLy8vXG5cbiAgcnVsZU5hbWUgPSBydWxlTmFtZUZyb21Ob25MZWZ0UmVjdXJzaXZlUnVsZU5hbWUobm9uTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lKTtcblxuICBjb25zdCBydWxlTmFtZUIgPSBydWxlTmFtZTsgLy8vXG5cbiAgY29uc3Qgbm9uTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lTWF0Y2hlc1J1bGVOYW1lID0gKHJ1bGVOYW1lQSA9PT0gcnVsZU5hbWVCKTsgIC8vL1xuXG4gIHJldHVybiBub25MZWZ0UmVjdXJzaXZlUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBub25MZWZ0UmVjdXJzaXZlUnVsZU5hbWVGcm9tUnVsZU5hbWUsXG4gIG5vbkxlZnRSZWN1cnNpdmVSdWxlTmFtZUZyb21MZWZ0UmVjdXJzaXZlUnVsZU5hbWUsXG4gIHJpZ2h0UmVjdXJzaXZlUnVsZU5hbWVGcm9tUnVsZU5hbWUsXG4gIHJpZ2h0UmVjdXJzaXZlUnVsZU5hbWVGcm9tUmVjdXJzaXZlUnVsZU5hbWUsXG4gIHJ1bGVOYW1lRnJvbU5vbkxlZnRSZWN1cnNpdmVSdWxlTmFtZSxcbiAgY2hlY2tOb25MZWZ0UmVjdXJzaXZlUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWVcbn07XG4iXX0=