"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ruleNameFromReducedRuleName: function() {
        return ruleNameFromReducedRuleName;
    },
    ruleNameFromRepeatedRuleName: function() {
        return ruleNameFromRepeatedRuleName;
    },
    directlyReducedRuleNameFromRuleName: function() {
        return directlyReducedRuleNameFromRuleName;
    },
    directlyRepeatedRuleNameFromRuleName: function() {
        return directlyRepeatedRuleNameFromRuleName;
    },
    indirectlyReducedRuleNameFromRuleName: function() {
        return indirectlyReducedRuleNameFromRuleName;
    },
    ruleNameFromImplicitlyReducedRuleName: function() {
        return ruleNameFromImplicitlyReducedRuleName;
    },
    ruleNameFromIndirectlyRepeatedRuleName: function() {
        return ruleNameFromIndirectlyRepeatedRuleName;
    },
    reducedRuleNameFromRuleName: function() {
        return reducedRuleNameFromRuleName;
    },
    implicitlyReducedRuleNameFromRuleNameAndLeftRecursiveRuleName: function() {
        return implicitlyReducedRuleNameFromRuleNameAndLeftRecursiveRuleName;
    },
    indirectlyRepeatedRuleNameFromRuleNameAndLeftRecursiveRuleName: function() {
        return indirectlyRepeatedRuleNameFromRuleNameAndLeftRecursiveRuleName;
    }
});
function ruleNameFromReducedRuleName(reducedRuleName) {
    var ruleName = reducedRuleName.replace(/(__|_)$/g, "");
    return ruleName;
}
function ruleNameFromRepeatedRuleName(repeatedRuleName) {
    var ruleName = repeatedRuleName.replace(/~[^~]+~|~$/, "");
    return ruleName;
}
function directlyReducedRuleNameFromRuleName(ruleName) {
    var directlyReducedRuleName = "".concat(ruleName, "_");
    return directlyReducedRuleName;
}
function directlyRepeatedRuleNameFromRuleName(ruleName) {
    var directlyRepeatedRuleName = "".concat(ruleName, "~");
    return directlyRepeatedRuleName;
}
function indirectlyReducedRuleNameFromRuleName(ruleName) {
    var indirectlyReducedRuleName = "".concat(ruleName, "__");
    return indirectlyReducedRuleName;
}
function ruleNameFromImplicitlyReducedRuleName(implicitlyReducedRuleName) {
    var ruleName = implicitlyReducedRuleName.replace(/_.+/, "");
    return ruleName;
}
function ruleNameFromIndirectlyRepeatedRuleName(indirectlyRepeatedRuleName) {
    var ruleName = indirectlyRepeatedRuleName.replace(/^[^~]+~|~$/g, "");
    return ruleName;
}
function reducedRuleNameFromRuleName(ruleName) {
    var reducedRuleName = "".concat(ruleName, "_");
    return reducedRuleName;
}
function implicitlyReducedRuleNameFromRuleNameAndLeftRecursiveRuleName(ruleName, leftRecursiveRuleName) {
    var implicitlyReducedRuleName = "".concat(leftRecursiveRuleName, "_").concat(ruleName, "_");
    return implicitlyReducedRuleName;
}
function indirectlyRepeatedRuleNameFromRuleNameAndLeftRecursiveRuleName(ruleName, leftRecursiveRuleName) {
    var indirectlyRepeatedRuleName = "".concat(ruleName, "~").concat(leftRecursiveRuleName);
    return indirectlyRepeatedRuleName;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcnVsZU5hbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlTmFtZUZyb21SZWR1Y2VkUnVsZU5hbWUocmVkdWNlZFJ1bGVOYW1lKSB7XG4gIGNvbnN0IHJ1bGVOYW1lID0gcmVkdWNlZFJ1bGVOYW1lLnJlcGxhY2UoLyhfX3xfKSQvZywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcnVsZU5hbWVGcm9tUmVwZWF0ZWRSdWxlTmFtZShyZXBlYXRlZFJ1bGVOYW1lKSB7XG4gIGNvbnN0IHJ1bGVOYW1lID0gcmVwZWF0ZWRSdWxlTmFtZS5yZXBsYWNlKC9+W15+XSt+fH4kLywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWUocnVsZU5hbWUpIHtcbiAgY29uc3QgZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWUgPSBgJHtydWxlTmFtZX1fYDtcblxuICByZXR1cm4gZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXJlY3RseVJlcGVhdGVkUnVsZU5hbWVGcm9tUnVsZU5hbWUocnVsZU5hbWUpIHtcbiAgY29uc3QgZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lID0gYCR7cnVsZU5hbWV9fmA7XG5cbiAgcmV0dXJuIGRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWUocnVsZU5hbWUpIHtcbiAgY29uc3QgaW5kaXJlY3RseVJlZHVjZWRSdWxlTmFtZSA9IGAke3J1bGVOYW1lfV9fYDtcblxuICByZXR1cm4gaW5kaXJlY3RseVJlZHVjZWRSdWxlTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bGVOYW1lRnJvbUltcGxpY2l0bHlSZWR1Y2VkUnVsZU5hbWUoaW1wbGljaXRseVJlZHVjZWRSdWxlTmFtZSkge1xuICBjb25zdCBydWxlTmFtZSA9IGltcGxpY2l0bHlSZWR1Y2VkUnVsZU5hbWUucmVwbGFjZSgvXy4rLywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcnVsZU5hbWVGcm9tSW5kaXJlY3RseVJlcGVhdGVkUnVsZU5hbWUoaW5kaXJlY3RseVJlcGVhdGVkUnVsZU5hbWUpIHtcbiAgY29uc3QgcnVsZU5hbWUgPSBpbmRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZS5yZXBsYWNlKC9eW15+XSt+fH4kL2csIFwiXCIpO1xuXG4gIHJldHVybiBydWxlTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlZHVjZWRSdWxlTmFtZUZyb21SdWxlTmFtZShydWxlTmFtZSkge1xuICBjb25zdCByZWR1Y2VkUnVsZU5hbWUgPSBgJHtydWxlTmFtZX1fYDtcblxuICByZXR1cm4gcmVkdWNlZFJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW1wbGljaXRseVJlZHVjZWRSdWxlTmFtZUZyb21SdWxlTmFtZUFuZExlZnRSZWN1cnNpdmVSdWxlTmFtZShydWxlTmFtZSwgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lKSB7XG4gIGNvbnN0IGltcGxpY2l0bHlSZWR1Y2VkUnVsZU5hbWUgPSBgJHtsZWZ0UmVjdXJzaXZlUnVsZU5hbWV9XyR7cnVsZU5hbWV9X2A7XG5cbiAgcmV0dXJuIGltcGxpY2l0bHlSZWR1Y2VkUnVsZU5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbmRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZUZyb21SdWxlTmFtZUFuZExlZnRSZWN1cnNpdmVSdWxlTmFtZShydWxlTmFtZSwgbGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lKSB7XG4gIGNvbnN0IGluZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lID0gYCR7cnVsZU5hbWV9fiR7bGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lfWA7XG5cbiAgcmV0dXJuIGluZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lO1xufVxuIl0sIm5hbWVzIjpbInJ1bGVOYW1lRnJvbVJlZHVjZWRSdWxlTmFtZSIsInJ1bGVOYW1lRnJvbVJlcGVhdGVkUnVsZU5hbWUiLCJkaXJlY3RseVJlZHVjZWRSdWxlTmFtZUZyb21SdWxlTmFtZSIsImRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZUZyb21SdWxlTmFtZSIsImluZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWUiLCJydWxlTmFtZUZyb21JbXBsaWNpdGx5UmVkdWNlZFJ1bGVOYW1lIiwicnVsZU5hbWVGcm9tSW5kaXJlY3RseVJlcGVhdGVkUnVsZU5hbWUiLCJyZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWUiLCJpbXBsaWNpdGx5UmVkdWNlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lQW5kTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lIiwiaW5kaXJlY3RseVJlcGVhdGVkUnVsZU5hbWVGcm9tUnVsZU5hbWVBbmRMZWZ0UmVjdXJzaXZlUnVsZU5hbWUiLCJyZWR1Y2VkUnVsZU5hbWUiLCJydWxlTmFtZSIsInJlcGxhY2UiLCJyZXBlYXRlZFJ1bGVOYW1lIiwiZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWUiLCJkaXJlY3RseVJlcGVhdGVkUnVsZU5hbWUiLCJpbmRpcmVjdGx5UmVkdWNlZFJ1bGVOYW1lIiwiaW1wbGljaXRseVJlZHVjZWRSdWxlTmFtZSIsImluZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lIiwibGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7SUFFZ0JBLDJCQUEyQjtlQUEzQkE7O0lBTUFDLDRCQUE0QjtlQUE1QkE7O0lBTUFDLG1DQUFtQztlQUFuQ0E7O0lBTUFDLG9DQUFvQztlQUFwQ0E7O0lBTUFDLHFDQUFxQztlQUFyQ0E7O0lBTUFDLHFDQUFxQztlQUFyQ0E7O0lBTUFDLHNDQUFzQztlQUF0Q0E7O0lBTUFDLDJCQUEyQjtlQUEzQkE7O0lBTUFDLDZEQUE2RDtlQUE3REE7O0lBTUFDLDhEQUE4RDtlQUE5REE7OztBQXREVCxTQUFTVCw0QkFBNEJVLGVBQWUsRUFBRTtJQUMzRCxJQUFNQyxXQUFXRCxnQkFBZ0JFLE9BQU8sQ0FBQyxZQUFZO0lBRXJELE9BQU9EO0FBQ1Q7QUFFTyxTQUFTViw2QkFBNkJZLGdCQUFnQixFQUFFO0lBQzdELElBQU1GLFdBQVdFLGlCQUFpQkQsT0FBTyxDQUFDLGNBQWM7SUFFeEQsT0FBT0Q7QUFDVDtBQUVPLFNBQVNULG9DQUFvQ1MsUUFBUSxFQUFFO0lBQzVELElBQU1HLDBCQUEwQixBQUFDLEdBQVcsT0FBVEgsVUFBUztJQUU1QyxPQUFPRztBQUNUO0FBRU8sU0FBU1gscUNBQXFDUSxRQUFRLEVBQUU7SUFDN0QsSUFBTUksMkJBQTJCLEFBQUMsR0FBVyxPQUFUSixVQUFTO0lBRTdDLE9BQU9JO0FBQ1Q7QUFFTyxTQUFTWCxzQ0FBc0NPLFFBQVEsRUFBRTtJQUM5RCxJQUFNSyw0QkFBNEIsQUFBQyxHQUFXLE9BQVRMLFVBQVM7SUFFOUMsT0FBT0s7QUFDVDtBQUVPLFNBQVNYLHNDQUFzQ1kseUJBQXlCLEVBQUU7SUFDL0UsSUFBTU4sV0FBV00sMEJBQTBCTCxPQUFPLENBQUMsT0FBTztJQUUxRCxPQUFPRDtBQUNUO0FBRU8sU0FBU0wsdUNBQXVDWSwwQkFBMEIsRUFBRTtJQUNqRixJQUFNUCxXQUFXTywyQkFBMkJOLE9BQU8sQ0FBQyxlQUFlO0lBRW5FLE9BQU9EO0FBQ1Q7QUFFTyxTQUFTSiw0QkFBNEJJLFFBQVEsRUFBRTtJQUNwRCxJQUFNRCxrQkFBa0IsQUFBQyxHQUFXLE9BQVRDLFVBQVM7SUFFcEMsT0FBT0Q7QUFDVDtBQUVPLFNBQVNGLDhEQUE4REcsUUFBUSxFQUFFUSxxQkFBcUIsRUFBRTtJQUM3RyxJQUFNRiw0QkFBNEIsQUFBQyxHQUEyQk4sT0FBekJRLHVCQUFzQixLQUFZLE9BQVRSLFVBQVM7SUFFdkUsT0FBT007QUFDVDtBQUVPLFNBQVNSLCtEQUErREUsUUFBUSxFQUFFUSxxQkFBcUIsRUFBRTtJQUM5RyxJQUFNRCw2QkFBNkIsQUFBQyxHQUFjQyxPQUFaUixVQUFTLEtBQXlCLE9BQXRCUTtJQUVsRCxPQUFPRDtBQUNUIn0=