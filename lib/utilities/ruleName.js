"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ruleNameFromReducedRuleName: function() {
        return ruleNameFromReducedRuleName;
    },
    ruleNameFromRepeatedRuleName: function() {
        return ruleNameFromRepeatedRuleName;
    },
    directlyReducedRuleNameFromRuleName: function() {
        return directlyReducedRuleNameFromRuleName;
    },
    directlyRepeatedRuleNameFromRuleName: function() {
        return directlyRepeatedRuleNameFromRuleName;
    },
    indirectlyReducedRuleNameFromRuleName: function() {
        return indirectlyReducedRuleNameFromRuleName;
    },
    ruleNameFromImplicitlyReducedRuleName: function() {
        return ruleNameFromImplicitlyReducedRuleName;
    },
    ruleNameFromIndirectlyRepeatedRuleName: function() {
        return ruleNameFromIndirectlyRepeatedRuleName;
    },
    implicitlyReducedRuleNameFromRuleNameAndLeftRecursiveRuleName: function() {
        return implicitlyReducedRuleNameFromRuleNameAndLeftRecursiveRuleName;
    },
    indirectlyRepeatedRuleNameFromRuleNameAndLeftRecursiveRuleName: function() {
        return indirectlyRepeatedRuleNameFromRuleNameAndLeftRecursiveRuleName;
    }
});
function ruleNameFromReducedRuleName(reducedRuleName) {
    var ruleName = reducedRuleName.replace(/(__|_)$/g, "");
    return ruleName;
}
function ruleNameFromRepeatedRuleName(repeatedRuleName) {
    var ruleName = repeatedRuleName.replace(/~[^~]+~|~$/, "");
    return ruleName;
}
function directlyReducedRuleNameFromRuleName(ruleName) {
    var directlyReducedRuleName = "".concat(ruleName, "_");
    return directlyReducedRuleName;
}
function directlyRepeatedRuleNameFromRuleName(ruleName) {
    var directlyRepeatedRuleName = "".concat(ruleName, "~");
    return directlyRepeatedRuleName;
}
function indirectlyReducedRuleNameFromRuleName(ruleName) {
    var indirectlyReducedRuleName = "".concat(ruleName, "__");
    return indirectlyReducedRuleName;
}
function ruleNameFromImplicitlyReducedRuleName(implicitlyReducedRuleName) {
    var ruleName = implicitlyReducedRuleName.replace(/_.+/, "");
    return ruleName;
}
function ruleNameFromIndirectlyRepeatedRuleName(indirectlyRepeatedRuleName) {
    var ruleName = indirectlyRepeatedRuleName.replace(/^[^~]+~|~$/g, "");
    return ruleName;
}
function implicitlyReducedRuleNameFromRuleNameAndLeftRecursiveRuleName(ruleName, leftRecursiveRuleName) {
    var implicitlyReducedRuleName = "".concat(leftRecursiveRuleName, "_").concat(ruleName, "_");
    return implicitlyReducedRuleName;
}
function indirectlyRepeatedRuleNameFromRuleNameAndLeftRecursiveRuleName(ruleName, leftRecursiveRuleName) {
    var indirectlyRepeatedRuleName = "".concat(leftRecursiveRuleName, "~").concat(ruleName);
    return indirectlyRepeatedRuleName;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcnVsZU5hbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlTmFtZUZyb21SZWR1Y2VkUnVsZU5hbWUocmVkdWNlZFJ1bGVOYW1lKSB7XG4gIGNvbnN0IHJ1bGVOYW1lID0gcmVkdWNlZFJ1bGVOYW1lLnJlcGxhY2UoLyhfX3xfKSQvZywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcnVsZU5hbWVGcm9tUmVwZWF0ZWRSdWxlTmFtZShyZXBlYXRlZFJ1bGVOYW1lKSB7XG4gIGNvbnN0IHJ1bGVOYW1lID0gcmVwZWF0ZWRSdWxlTmFtZS5yZXBsYWNlKC9+W15+XSt+fH4kLywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWUocnVsZU5hbWUpIHtcbiAgY29uc3QgZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWUgPSBgJHtydWxlTmFtZX1fYDtcblxuICByZXR1cm4gZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXJlY3RseVJlcGVhdGVkUnVsZU5hbWVGcm9tUnVsZU5hbWUocnVsZU5hbWUpIHtcbiAgY29uc3QgZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lID0gYCR7cnVsZU5hbWV9fmA7XG5cbiAgcmV0dXJuIGRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWUocnVsZU5hbWUpIHtcbiAgY29uc3QgaW5kaXJlY3RseVJlZHVjZWRSdWxlTmFtZSA9IGAke3J1bGVOYW1lfV9fYDtcblxuICByZXR1cm4gaW5kaXJlY3RseVJlZHVjZWRSdWxlTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bGVOYW1lRnJvbUltcGxpY2l0bHlSZWR1Y2VkUnVsZU5hbWUoaW1wbGljaXRseVJlZHVjZWRSdWxlTmFtZSkge1xuICBjb25zdCBydWxlTmFtZSA9IGltcGxpY2l0bHlSZWR1Y2VkUnVsZU5hbWUucmVwbGFjZSgvXy4rLywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcnVsZU5hbWVGcm9tSW5kaXJlY3RseVJlcGVhdGVkUnVsZU5hbWUoaW5kaXJlY3RseVJlcGVhdGVkUnVsZU5hbWUpIHtcbiAgY29uc3QgcnVsZU5hbWUgPSBpbmRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZS5yZXBsYWNlKC9eW15+XSt+fH4kL2csIFwiXCIpO1xuXG4gIHJldHVybiBydWxlTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGltcGxpY2l0bHlSZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWVBbmRMZWZ0UmVjdXJzaXZlUnVsZU5hbWUocnVsZU5hbWUsIGxlZnRSZWN1cnNpdmVSdWxlTmFtZSkge1xuICBjb25zdCBpbXBsaWNpdGx5UmVkdWNlZFJ1bGVOYW1lID0gYCR7bGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lfV8ke3J1bGVOYW1lfV9gO1xuXG4gIHJldHVybiBpbXBsaWNpdGx5UmVkdWNlZFJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5kaXJlY3RseVJlcGVhdGVkUnVsZU5hbWVGcm9tUnVsZU5hbWVBbmRMZWZ0UmVjdXJzaXZlUnVsZU5hbWUocnVsZU5hbWUsIGxlZnRSZWN1cnNpdmVSdWxlTmFtZSkge1xuICBjb25zdCBpbmRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZSA9IGAke2xlZnRSZWN1cnNpdmVSdWxlTmFtZX1+JHtydWxlTmFtZX1gO1xuXG4gIHJldHVybiBpbmRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZTtcbn1cbiJdLCJuYW1lcyI6WyJydWxlTmFtZUZyb21SZWR1Y2VkUnVsZU5hbWUiLCJydWxlTmFtZUZyb21SZXBlYXRlZFJ1bGVOYW1lIiwiZGlyZWN0bHlSZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWUiLCJkaXJlY3RseVJlcGVhdGVkUnVsZU5hbWVGcm9tUnVsZU5hbWUiLCJpbmRpcmVjdGx5UmVkdWNlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lIiwicnVsZU5hbWVGcm9tSW1wbGljaXRseVJlZHVjZWRSdWxlTmFtZSIsInJ1bGVOYW1lRnJvbUluZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lIiwiaW1wbGljaXRseVJlZHVjZWRSdWxlTmFtZUZyb21SdWxlTmFtZUFuZExlZnRSZWN1cnNpdmVSdWxlTmFtZSIsImluZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lQW5kTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lIiwicmVkdWNlZFJ1bGVOYW1lIiwicnVsZU5hbWUiLCJyZXBsYWNlIiwicmVwZWF0ZWRSdWxlTmFtZSIsImRpcmVjdGx5UmVkdWNlZFJ1bGVOYW1lIiwiZGlyZWN0bHlSZXBlYXRlZFJ1bGVOYW1lIiwiaW5kaXJlY3RseVJlZHVjZWRSdWxlTmFtZSIsImltcGxpY2l0bHlSZWR1Y2VkUnVsZU5hbWUiLCJpbmRpcmVjdGx5UmVwZWF0ZWRSdWxlTmFtZSIsImxlZnRSZWN1cnNpdmVSdWxlTmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0lBRWdCQSwyQkFBMkI7ZUFBM0JBOztJQU1BQyw0QkFBNEI7ZUFBNUJBOztJQU1BQyxtQ0FBbUM7ZUFBbkNBOztJQU1BQyxvQ0FBb0M7ZUFBcENBOztJQU1BQyxxQ0FBcUM7ZUFBckNBOztJQU1BQyxxQ0FBcUM7ZUFBckNBOztJQU1BQyxzQ0FBc0M7ZUFBdENBOztJQU1BQyw2REFBNkQ7ZUFBN0RBOztJQU1BQyw4REFBOEQ7ZUFBOURBOzs7QUFoRFQsU0FBU1IsNEJBQTRCUyxlQUFlLEVBQUU7SUFDM0QsSUFBTUMsV0FBV0QsZ0JBQWdCRSxPQUFPLENBQUMsWUFBWTtJQUVyRCxPQUFPRDtBQUNUO0FBRU8sU0FBU1QsNkJBQTZCVyxnQkFBZ0IsRUFBRTtJQUM3RCxJQUFNRixXQUFXRSxpQkFBaUJELE9BQU8sQ0FBQyxjQUFjO0lBRXhELE9BQU9EO0FBQ1Q7QUFFTyxTQUFTUixvQ0FBb0NRLFFBQVEsRUFBRTtJQUM1RCxJQUFNRywwQkFBMEIsQUFBQyxHQUFXLE9BQVRILFVBQVM7SUFFNUMsT0FBT0c7QUFDVDtBQUVPLFNBQVNWLHFDQUFxQ08sUUFBUSxFQUFFO0lBQzdELElBQU1JLDJCQUEyQixBQUFDLEdBQVcsT0FBVEosVUFBUztJQUU3QyxPQUFPSTtBQUNUO0FBRU8sU0FBU1Ysc0NBQXNDTSxRQUFRLEVBQUU7SUFDOUQsSUFBTUssNEJBQTRCLEFBQUMsR0FBVyxPQUFUTCxVQUFTO0lBRTlDLE9BQU9LO0FBQ1Q7QUFFTyxTQUFTVixzQ0FBc0NXLHlCQUF5QixFQUFFO0lBQy9FLElBQU1OLFdBQVdNLDBCQUEwQkwsT0FBTyxDQUFDLE9BQU87SUFFMUQsT0FBT0Q7QUFDVDtBQUVPLFNBQVNKLHVDQUF1Q1csMEJBQTBCLEVBQUU7SUFDakYsSUFBTVAsV0FBV08sMkJBQTJCTixPQUFPLENBQUMsZUFBZTtJQUVuRSxPQUFPRDtBQUNUO0FBRU8sU0FBU0gsOERBQThERyxRQUFRLEVBQUVRLHFCQUFxQixFQUFFO0lBQzdHLElBQU1GLDRCQUE0QixBQUFDLEdBQTJCTixPQUF6QlEsdUJBQXNCLEtBQVksT0FBVFIsVUFBUztJQUV2RSxPQUFPTTtBQUNUO0FBRU8sU0FBU1IsK0RBQStERSxRQUFRLEVBQUVRLHFCQUFxQixFQUFFO0lBQzlHLElBQU1ELDZCQUE2QixBQUFDLEdBQTJCUCxPQUF6QlEsdUJBQXNCLEtBQVksT0FBVFI7SUFFL0QsT0FBT087QUFDVCJ9