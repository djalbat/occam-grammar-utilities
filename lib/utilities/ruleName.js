'use strict';

function nonRecursiveRuleNameFromRuleName(ruleName) {
  var nonRecursiveRuleName = ruleName + '_';

  return nonRecursiveRuleName;
}

function nonRecursiveRuleNameFromLeftRecursiveRuleName(leftRecursiveRuleName) {
  var nonRecursiveRuleName = leftRecursiveRuleName + '_';

  return nonRecursiveRuleName;
}

function rightRecursiveRuleNameFromRuleName(ruleName) {
  var rightRecursiveRuleName = ruleName + '~';

  return rightRecursiveRuleName;
}

function rightRecursiveRuleNameFromRecursiveRuleName(recursiveRuleName) {
  var rightRecursiveRuleName = recursiveRuleName + '~';

  return rightRecursiveRuleName;
}

function ruleNameFromNonRecursiveRuleName(nonRecursiveRuleName) {
  var ruleName = nonRecursiveRuleName.replace(/_$/, '');

  return ruleName;
}

function checkNonRecursiveRuleNameMatchesRuleName(nonRecursiveRuleName, ruleName) {
  var ruleNameA = ruleName; ///

  ruleName = ruleNameFromNonRecursiveRuleName(nonRecursiveRuleName);

  var ruleNameB = ruleName; ///

  var nonRecursiveRuleNameMatchesRuleName = ruleNameA === ruleNameB; ///

  return nonRecursiveRuleNameMatchesRuleName;
}

module.exports = {
  nonRecursiveRuleNameFromRuleName: nonRecursiveRuleNameFromRuleName,
  nonRecursiveRuleNameFromLeftRecursiveRuleName: nonRecursiveRuleNameFromLeftRecursiveRuleName,
  rightRecursiveRuleNameFromRuleName: rightRecursiveRuleNameFromRuleName,
  rightRecursiveRuleNameFromRecursiveRuleName: rightRecursiveRuleNameFromRecursiveRuleName,
  ruleNameFromNonRecursiveRuleName: ruleNameFromNonRecursiveRuleName,
  checkNonRecursiveRuleNameMatchesRuleName: checkNonRecursiveRuleNameMatchesRuleName
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvcnVsZU5hbWUuanMiXSwibmFtZXMiOlsibm9uUmVjdXJzaXZlUnVsZU5hbWVGcm9tUnVsZU5hbWUiLCJydWxlTmFtZSIsIm5vblJlY3Vyc2l2ZVJ1bGVOYW1lIiwibm9uUmVjdXJzaXZlUnVsZU5hbWVGcm9tTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lIiwibGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lIiwicmlnaHRSZWN1cnNpdmVSdWxlTmFtZUZyb21SdWxlTmFtZSIsInJpZ2h0UmVjdXJzaXZlUnVsZU5hbWUiLCJyaWdodFJlY3Vyc2l2ZVJ1bGVOYW1lRnJvbVJlY3Vyc2l2ZVJ1bGVOYW1lIiwicmVjdXJzaXZlUnVsZU5hbWUiLCJydWxlTmFtZUZyb21Ob25SZWN1cnNpdmVSdWxlTmFtZSIsInJlcGxhY2UiLCJjaGVja05vblJlY3Vyc2l2ZVJ1bGVOYW1lTWF0Y2hlc1J1bGVOYW1lIiwicnVsZU5hbWVBIiwicnVsZU5hbWVCIiwibm9uUmVjdXJzaXZlUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxTQUFTQSxnQ0FBVCxDQUEwQ0MsUUFBMUMsRUFBb0Q7QUFDbEQsTUFBTUMsdUJBQTBCRCxRQUExQixNQUFOOztBQUVBLFNBQU9DLG9CQUFQO0FBQ0Q7O0FBRUQsU0FBU0MsNkNBQVQsQ0FBdURDLHFCQUF2RCxFQUE4RTtBQUM1RSxNQUFNRix1QkFBMEJFLHFCQUExQixNQUFOOztBQUVBLFNBQU9GLG9CQUFQO0FBQ0Q7O0FBRUQsU0FBU0csa0NBQVQsQ0FBNENKLFFBQTVDLEVBQXNEO0FBQ3BELE1BQU1LLHlCQUE0QkwsUUFBNUIsTUFBTjs7QUFFQSxTQUFPSyxzQkFBUDtBQUNEOztBQUVELFNBQVNDLDJDQUFULENBQXFEQyxpQkFBckQsRUFBd0U7QUFDdEUsTUFBTUYseUJBQTRCRSxpQkFBNUIsTUFBTjs7QUFFQSxTQUFPRixzQkFBUDtBQUNEOztBQUVELFNBQVNHLGdDQUFULENBQTBDUCxvQkFBMUMsRUFBZ0U7QUFDOUQsTUFBTUQsV0FBV0MscUJBQXFCUSxPQUFyQixDQUE2QixJQUE3QixFQUFtQyxFQUFuQyxDQUFqQjs7QUFFQSxTQUFPVCxRQUFQO0FBQ0Q7O0FBRUQsU0FBU1Usd0NBQVQsQ0FBa0RULG9CQUFsRCxFQUF3RUQsUUFBeEUsRUFBa0Y7QUFDaEYsTUFBTVcsWUFBWVgsUUFBbEIsQ0FEZ0YsQ0FDcEQ7O0FBRTVCQSxhQUFXUSxpQ0FBaUNQLG9CQUFqQyxDQUFYOztBQUVBLE1BQU1XLFlBQVlaLFFBQWxCLENBTGdGLENBS3BEOztBQUU1QixNQUFNYSxzQ0FBdUNGLGNBQWNDLFNBQTNELENBUGdGLENBT1I7O0FBRXhFLFNBQU9DLG1DQUFQO0FBQ0Q7O0FBRURDLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmhCLG9FQURlO0FBRWZHLDhGQUZlO0FBR2ZFLHdFQUhlO0FBSWZFLDBGQUplO0FBS2ZFLG9FQUxlO0FBTWZFO0FBTmUsQ0FBakIiLCJmaWxlIjoicnVsZU5hbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIG5vblJlY3Vyc2l2ZVJ1bGVOYW1lRnJvbVJ1bGVOYW1lKHJ1bGVOYW1lKSB7XG4gIGNvbnN0IG5vblJlY3Vyc2l2ZVJ1bGVOYW1lID0gYCR7cnVsZU5hbWV9X2A7XG5cbiAgcmV0dXJuIG5vblJlY3Vyc2l2ZVJ1bGVOYW1lO1xufVxuXG5mdW5jdGlvbiBub25SZWN1cnNpdmVSdWxlTmFtZUZyb21MZWZ0UmVjdXJzaXZlUnVsZU5hbWUobGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lKSB7XG4gIGNvbnN0IG5vblJlY3Vyc2l2ZVJ1bGVOYW1lID0gYCR7bGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lfV9gO1xuXG4gIHJldHVybiBub25SZWN1cnNpdmVSdWxlTmFtZTtcbn1cblxuZnVuY3Rpb24gcmlnaHRSZWN1cnNpdmVSdWxlTmFtZUZyb21SdWxlTmFtZShydWxlTmFtZSkge1xuICBjb25zdCByaWdodFJlY3Vyc2l2ZVJ1bGVOYW1lID0gYCR7cnVsZU5hbWV9fmA7XG5cbiAgcmV0dXJuIHJpZ2h0UmVjdXJzaXZlUnVsZU5hbWU7XG59XG5cbmZ1bmN0aW9uIHJpZ2h0UmVjdXJzaXZlUnVsZU5hbWVGcm9tUmVjdXJzaXZlUnVsZU5hbWUocmVjdXJzaXZlUnVsZU5hbWUpIHtcbiAgY29uc3QgcmlnaHRSZWN1cnNpdmVSdWxlTmFtZSA9IGAke3JlY3Vyc2l2ZVJ1bGVOYW1lfX5gO1xuXG4gIHJldHVybiByaWdodFJlY3Vyc2l2ZVJ1bGVOYW1lO1xufVxuXG5mdW5jdGlvbiBydWxlTmFtZUZyb21Ob25SZWN1cnNpdmVSdWxlTmFtZShub25SZWN1cnNpdmVSdWxlTmFtZSkge1xuICBjb25zdCBydWxlTmFtZSA9IG5vblJlY3Vyc2l2ZVJ1bGVOYW1lLnJlcGxhY2UoL18kLywgJycpO1xuXG4gIHJldHVybiBydWxlTmFtZTtcbn1cblxuZnVuY3Rpb24gY2hlY2tOb25SZWN1cnNpdmVSdWxlTmFtZU1hdGNoZXNSdWxlTmFtZShub25SZWN1cnNpdmVSdWxlTmFtZSwgcnVsZU5hbWUpIHtcbiAgY29uc3QgcnVsZU5hbWVBID0gcnVsZU5hbWU7IC8vL1xuXG4gIHJ1bGVOYW1lID0gcnVsZU5hbWVGcm9tTm9uUmVjdXJzaXZlUnVsZU5hbWUobm9uUmVjdXJzaXZlUnVsZU5hbWUpO1xuXG4gIGNvbnN0IHJ1bGVOYW1lQiA9IHJ1bGVOYW1lOyAvLy9cblxuICBjb25zdCBub25SZWN1cnNpdmVSdWxlTmFtZU1hdGNoZXNSdWxlTmFtZSA9IChydWxlTmFtZUEgPT09IHJ1bGVOYW1lQik7ICAvLy9cblxuICByZXR1cm4gbm9uUmVjdXJzaXZlUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBub25SZWN1cnNpdmVSdWxlTmFtZUZyb21SdWxlTmFtZSxcbiAgbm9uUmVjdXJzaXZlUnVsZU5hbWVGcm9tTGVmdFJlY3Vyc2l2ZVJ1bGVOYW1lLFxuICByaWdodFJlY3Vyc2l2ZVJ1bGVOYW1lRnJvbVJ1bGVOYW1lLFxuICByaWdodFJlY3Vyc2l2ZVJ1bGVOYW1lRnJvbVJlY3Vyc2l2ZVJ1bGVOYW1lLFxuICBydWxlTmFtZUZyb21Ob25SZWN1cnNpdmVSdWxlTmFtZSxcbiAgY2hlY2tOb25SZWN1cnNpdmVSdWxlTmFtZU1hdGNoZXNSdWxlTmFtZVxufTtcbiJdfQ==