"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.reducedRuleNameFromRuleName = reducedRuleNameFromRuleName;
exports.ruleNameFromReducedRuleName = ruleNameFromReducedRuleName;
exports.ruleNameFromRepeatedRuleName = ruleNameFromRepeatedRuleName;
exports.doesReducedRuleNameMatchRuleName = doesReducedRuleNameMatchRuleName;
exports.repeatedRuleNameFromRuleNameAndIndex = repeatedRuleNameFromRuleNameAndIndex;
function reducedRuleNameFromRuleName(ruleName) {
    var reducedRuleName = "".concat(ruleName, "_");
    return reducedRuleName;
}
function ruleNameFromReducedRuleName(reducedRuleName) {
    var ruleName = reducedRuleName.replace(/_$/, "");
    return ruleName;
}
function ruleNameFromRepeatedRuleName(repeatedRuleName) {
    var ruleName = repeatedRuleName.replace(/(?:\.\d+)?~$/, "");
    return ruleName;
}
function doesReducedRuleNameMatchRuleName(reducedRuleName, ruleName) {
    var ruleNameA = ruleName; ///
    ruleName = ruleNameFromReducedRuleName(reducedRuleName);
    var ruleNameB = ruleName; ///
    var reducedRuleNameMatchesRuleName = ruleNameA === ruleNameB; ///
    return reducedRuleNameMatchesRuleName;
}
function repeatedRuleNameFromRuleNameAndIndex(ruleName, index) {
    var repeatedRuleName = index === 0 ? "".concat(ruleName, "~") : "".concat(ruleName, ".").concat(index, "~");
    return repeatedRuleName;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcnVsZU5hbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiByZWR1Y2VkUnVsZU5hbWVGcm9tUnVsZU5hbWUocnVsZU5hbWUpIHtcbiAgY29uc3QgcmVkdWNlZFJ1bGVOYW1lID0gYCR7cnVsZU5hbWV9X2A7XG5cbiAgcmV0dXJuIHJlZHVjZWRSdWxlTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bGVOYW1lRnJvbVJlZHVjZWRSdWxlTmFtZShyZWR1Y2VkUnVsZU5hbWUpIHtcbiAgY29uc3QgcnVsZU5hbWUgPSByZWR1Y2VkUnVsZU5hbWUucmVwbGFjZSgvXyQvLCBcIlwiKTtcblxuICByZXR1cm4gcnVsZU5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlTmFtZUZyb21SZXBlYXRlZFJ1bGVOYW1lKHJlcGVhdGVkUnVsZU5hbWUpIHtcbiAgY29uc3QgcnVsZU5hbWUgPSByZXBlYXRlZFJ1bGVOYW1lLnJlcGxhY2UoLyg/OlxcLlxcZCspP34kLywgXCJcIik7XG5cbiAgcmV0dXJuIHJ1bGVOYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZG9lc1JlZHVjZWRSdWxlTmFtZU1hdGNoUnVsZU5hbWUocmVkdWNlZFJ1bGVOYW1lLCBydWxlTmFtZSkge1xuICBjb25zdCBydWxlTmFtZUEgPSBydWxlTmFtZTsgLy8vXG5cbiAgcnVsZU5hbWUgPSBydWxlTmFtZUZyb21SZWR1Y2VkUnVsZU5hbWUocmVkdWNlZFJ1bGVOYW1lKTtcblxuICBjb25zdCBydWxlTmFtZUIgPSBydWxlTmFtZTsgLy8vXG5cbiAgY29uc3QgcmVkdWNlZFJ1bGVOYW1lTWF0Y2hlc1J1bGVOYW1lID0gKHJ1bGVOYW1lQSA9PT0gcnVsZU5hbWVCKTsgIC8vL1xuXG4gIHJldHVybiByZWR1Y2VkUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXBlYXRlZFJ1bGVOYW1lRnJvbVJ1bGVOYW1lQW5kSW5kZXgocnVsZU5hbWUsaW5kZXgpIHtcbiAgY29uc3QgcmVwZWF0ZWRSdWxlTmFtZSA9IChpbmRleCA9PT0gMCkgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGAke3J1bGVOYW1lfX5gIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGAke3J1bGVOYW1lfS4ke2luZGV4fX5gO1xuXG4gIHJldHVybiByZXBlYXRlZFJ1bGVOYW1lO1xufVxuIl0sIm5hbWVzIjpbInJlZHVjZWRSdWxlTmFtZUZyb21SdWxlTmFtZSIsInJ1bGVOYW1lRnJvbVJlZHVjZWRSdWxlTmFtZSIsInJ1bGVOYW1lRnJvbVJlcGVhdGVkUnVsZU5hbWUiLCJkb2VzUmVkdWNlZFJ1bGVOYW1lTWF0Y2hSdWxlTmFtZSIsInJlcGVhdGVkUnVsZU5hbWVGcm9tUnVsZU5hbWVBbmRJbmRleCIsInJ1bGVOYW1lIiwicmVkdWNlZFJ1bGVOYW1lIiwicmVwbGFjZSIsInJlcGVhdGVkUnVsZU5hbWUiLCJydWxlTmFtZUEiLCJydWxlTmFtZUIiLCJyZWR1Y2VkUnVsZU5hbWVNYXRjaGVzUnVsZU5hbWUiLCJpbmRleCJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDOzs7O1FBRUdBLDJCQUEyQixHQUEzQkEsMkJBQTJCO1FBTTNCQywyQkFBMkIsR0FBM0JBLDJCQUEyQjtRQU0zQkMsNEJBQTRCLEdBQTVCQSw0QkFBNEI7UUFNNUJDLGdDQUFnQyxHQUFoQ0EsZ0NBQWdDO1FBWWhDQyxvQ0FBb0MsR0FBcENBLG9DQUFvQztBQTlCN0MsU0FBU0osMkJBQTJCLENBQUNLLFFBQVEsRUFBRTtJQUNwRCxJQUFNQyxlQUFlLEdBQUcsQUFBQyxFQUFBLENBQVcsTUFBQyxDQUFWRCxRQUFRLEVBQUMsR0FBQyxDQUFDLEFBQUM7SUFFdkMsT0FBT0MsZUFBZSxDQUFDO0NBQ3hCO0FBRU0sU0FBU0wsMkJBQTJCLENBQUNLLGVBQWUsRUFBRTtJQUMzRCxJQUFNRCxRQUFRLEdBQUdDLGVBQWUsQ0FBQ0MsT0FBTyxPQUFPLEVBQUUsQ0FBQyxBQUFDO0lBRW5ELE9BQU9GLFFBQVEsQ0FBQztDQUNqQjtBQUVNLFNBQVNILDRCQUE0QixDQUFDTSxnQkFBZ0IsRUFBRTtJQUM3RCxJQUFNSCxRQUFRLEdBQUdHLGdCQUFnQixDQUFDRCxPQUFPLGlCQUFpQixFQUFFLENBQUMsQUFBQztJQUU5RCxPQUFPRixRQUFRLENBQUM7Q0FDakI7QUFFTSxTQUFTRixnQ0FBZ0MsQ0FBQ0csZUFBZSxFQUFFRCxRQUFRLEVBQUU7SUFDMUUsSUFBTUksU0FBUyxHQUFHSixRQUFRLEFBQUMsRUFBQyxHQUFHO0lBRS9CQSxRQUFRLEdBQUdKLDJCQUEyQixDQUFDSyxlQUFlLENBQUMsQ0FBQztJQUV4RCxJQUFNSSxTQUFTLEdBQUdMLFFBQVEsQUFBQyxFQUFDLEdBQUc7SUFFL0IsSUFBTU0sOEJBQThCLEdBQUlGLFNBQVMsS0FBS0MsU0FBUyxBQUFDLEFBQUMsRUFBRSxHQUFHO0lBRXRFLE9BQU9DLDhCQUE4QixDQUFDO0NBQ3ZDO0FBRU0sU0FBU1Asb0NBQW9DLENBQUNDLFFBQVEsRUFBQ08sS0FBSyxFQUFFO0lBQ25FLElBQU1KLGdCQUFnQixHQUFHLEFBQUNJLEtBQUssS0FBSyxDQUFDLEdBQ1gsQUFBQyxFQUFBLENBQVcsTUFBQyxDQUFWUCxRQUFRLEVBQUMsR0FBQyxDQUFDLEdBQ1osQUFBQyxFQUFBLENBQWNPLE1BQUssQ0FBakJQLFFBQVEsRUFBQyxHQUFDLENBQVEsQ0FBQSxNQUFDLENBQVBPLEtBQUssRUFBQyxHQUFDLENBQUMsQUFBQztJQUVwRCxPQUFPSixnQkFBZ0IsQ0FBQztDQUN6QiJ9