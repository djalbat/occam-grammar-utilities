'use strict';

var LeftRecursiveRule = require('./rule/leftRecursive'),
    RightRecursiveRule = require('./rule/rightRecursive'),
    NonLeftRecursiveRule = require('./rule/nonLeftRecursive'),
    ImplicitlyLeftRecursiveRule = require('./rule/implicitlyLeftRecursive');

function eliminateImplicitLeftRecursion(rules) {
  var nonLeftRecursiveRules = [],
      rightRecursiveRules = [];

  rules.forEach(function (rule, index) {
    var begin = 0,
        end = index,
        ///
    previousNonLeftRecursiveRules = nonLeftRecursiveRules.slice(begin, end),
        previousRules = previousNonLeftRecursiveRules,
        ///
    implicitlyLeftRecursiveRule = ImplicitlyLeftRecursiveRule.fromRuleAndPreviousRules(rule, previousRules);

    if (implicitlyLeftRecursiveRule !== null) {
      var _leftRecursiveRule = LeftRecursiveRule.fromImplicitlyLeftRecursiveRuleAndPreviousRules(implicitlyLeftRecursiveRule, previousRules);

      rule = _leftRecursiveRule; ///
    }

    var leftRecursiveRule = LeftRecursiveRule.fromRule(rule);

    if (leftRecursiveRule === null) {
      var nonLeftRecursiveRule = rule; ///

      nonLeftRecursiveRules.push(nonLeftRecursiveRule);
    } else {
      var rightRecursiveRule = RightRecursiveRule.fromLeftRecursiveRule(leftRecursiveRule),
          _nonLeftRecursiveRule = NonLeftRecursiveRule.fromLeftRecursiveRule(leftRecursiveRule);

      rightRecursiveRules.push(rightRecursiveRule);

      nonLeftRecursiveRules.push(_nonLeftRecursiveRule);
    }
  });

  rules = [].concat(nonLeftRecursiveRules).concat(rightRecursiveRules);

  return rules;
}

module.exports = eliminateImplicitLeftRecursion;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9lbGltaW5hdGVJbXBsaWNpdExlZnRSZWN1cnNpb24uanMiXSwibmFtZXMiOlsiTGVmdFJlY3Vyc2l2ZVJ1bGUiLCJyZXF1aXJlIiwiUmlnaHRSZWN1cnNpdmVSdWxlIiwiTm9uTGVmdFJlY3Vyc2l2ZVJ1bGUiLCJJbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZVJ1bGUiLCJlbGltaW5hdGVJbXBsaWNpdExlZnRSZWN1cnNpb24iLCJydWxlcyIsIm5vbkxlZnRSZWN1cnNpdmVSdWxlcyIsInJpZ2h0UmVjdXJzaXZlUnVsZXMiLCJmb3JFYWNoIiwicnVsZSIsImluZGV4IiwiYmVnaW4iLCJlbmQiLCJwcmV2aW91c05vbkxlZnRSZWN1cnNpdmVSdWxlcyIsInNsaWNlIiwicHJldmlvdXNSdWxlcyIsImltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlUnVsZSIsImZyb21SdWxlQW5kUHJldmlvdXNSdWxlcyIsImxlZnRSZWN1cnNpdmVSdWxlIiwiZnJvbUltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlUnVsZUFuZFByZXZpb3VzUnVsZXMiLCJmcm9tUnVsZSIsIm5vbkxlZnRSZWN1cnNpdmVSdWxlIiwicHVzaCIsInJpZ2h0UmVjdXJzaXZlUnVsZSIsImZyb21MZWZ0UmVjdXJzaXZlUnVsZSIsImNvbmNhdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLG9CQUFvQkMsUUFBUSxzQkFBUixDQUExQjtBQUFBLElBQ01DLHFCQUFxQkQsUUFBUSx1QkFBUixDQUQzQjtBQUFBLElBRU1FLHVCQUF1QkYsUUFBUSx5QkFBUixDQUY3QjtBQUFBLElBR01HLDhCQUE4QkgsUUFBUSxnQ0FBUixDQUhwQzs7QUFLQSxTQUFTSSw4QkFBVCxDQUF3Q0MsS0FBeEMsRUFBK0M7QUFDN0MsTUFBTUMsd0JBQXdCLEVBQTlCO0FBQUEsTUFDTUMsc0JBQXNCLEVBRDVCOztBQUdBRixRQUFNRyxPQUFOLENBQWMsVUFBU0MsSUFBVCxFQUFlQyxLQUFmLEVBQXNCO0FBQ2xDLFFBQU1DLFFBQVEsQ0FBZDtBQUFBLFFBQ01DLE1BQU1GLEtBRFo7QUFBQSxRQUNvQjtBQUNkRyxvQ0FBZ0NQLHNCQUFzQlEsS0FBdEIsQ0FBNEJILEtBQTVCLEVBQW1DQyxHQUFuQyxDQUZ0QztBQUFBLFFBR01HLGdCQUFnQkYsNkJBSHRCO0FBQUEsUUFHc0Q7QUFDaERHLGtDQUE4QmIsNEJBQTRCYyx3QkFBNUIsQ0FBcURSLElBQXJELEVBQTJETSxhQUEzRCxDQUpwQzs7QUFNQSxRQUFJQyxnQ0FBZ0MsSUFBcEMsRUFBMEM7QUFDeEMsVUFBTUUscUJBQW9CbkIsa0JBQWtCb0IsK0NBQWxCLENBQWtFSCwyQkFBbEUsRUFBK0ZELGFBQS9GLENBQTFCOztBQUVBTixhQUFPUyxrQkFBUCxDQUh3QyxDQUdkO0FBQzNCOztBQUVELFFBQU1BLG9CQUFvQm5CLGtCQUFrQnFCLFFBQWxCLENBQTJCWCxJQUEzQixDQUExQjs7QUFFQSxRQUFJUyxzQkFBc0IsSUFBMUIsRUFBZ0M7QUFDOUIsVUFBTUcsdUJBQXVCWixJQUE3QixDQUQ4QixDQUNNOztBQUVwQ0gsNEJBQXNCZ0IsSUFBdEIsQ0FBMkJELG9CQUEzQjtBQUNELEtBSkQsTUFJTztBQUNMLFVBQU1FLHFCQUFxQnRCLG1CQUFtQnVCLHFCQUFuQixDQUF5Q04saUJBQXpDLENBQTNCO0FBQUEsVUFDTUcsd0JBQXVCbkIscUJBQXFCc0IscUJBQXJCLENBQTJDTixpQkFBM0MsQ0FEN0I7O0FBR0FYLDBCQUFvQmUsSUFBcEIsQ0FBeUJDLGtCQUF6Qjs7QUFFQWpCLDRCQUFzQmdCLElBQXRCLENBQTJCRCxxQkFBM0I7QUFDRDtBQUNGLEdBM0JEOztBQTZCQWhCLFVBQVEsR0FBR29CLE1BQUgsQ0FBVW5CLHFCQUFWLEVBQWlDbUIsTUFBakMsQ0FBd0NsQixtQkFBeEMsQ0FBUjs7QUFFQSxTQUFPRixLQUFQO0FBQ0Q7O0FBRURxQixPQUFPQyxPQUFQLEdBQWlCdkIsOEJBQWpCIiwiZmlsZSI6ImVsaW1pbmF0ZUltcGxpY2l0TGVmdFJlY3Vyc2lvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTGVmdFJlY3Vyc2l2ZVJ1bGUgPSByZXF1aXJlKCcuL3J1bGUvbGVmdFJlY3Vyc2l2ZScpLFxuICAgICAgUmlnaHRSZWN1cnNpdmVSdWxlID0gcmVxdWlyZSgnLi9ydWxlL3JpZ2h0UmVjdXJzaXZlJyksXG4gICAgICBOb25MZWZ0UmVjdXJzaXZlUnVsZSA9IHJlcXVpcmUoJy4vcnVsZS9ub25MZWZ0UmVjdXJzaXZlJyksXG4gICAgICBJbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZVJ1bGUgPSByZXF1aXJlKCcuL3J1bGUvaW1wbGljaXRseUxlZnRSZWN1cnNpdmUnKTtcblxuZnVuY3Rpb24gZWxpbWluYXRlSW1wbGljaXRMZWZ0UmVjdXJzaW9uKHJ1bGVzKSB7XG4gIGNvbnN0IG5vbkxlZnRSZWN1cnNpdmVSdWxlcyA9IFtdLFxuICAgICAgICByaWdodFJlY3Vyc2l2ZVJ1bGVzID0gW107XG5cbiAgcnVsZXMuZm9yRWFjaChmdW5jdGlvbihydWxlLCBpbmRleCkge1xuICAgIGNvbnN0IGJlZ2luID0gMCxcbiAgICAgICAgICBlbmQgPSBpbmRleCwgIC8vL1xuICAgICAgICAgIHByZXZpb3VzTm9uTGVmdFJlY3Vyc2l2ZVJ1bGVzID0gbm9uTGVmdFJlY3Vyc2l2ZVJ1bGVzLnNsaWNlKGJlZ2luLCBlbmQpLFxuICAgICAgICAgIHByZXZpb3VzUnVsZXMgPSBwcmV2aW91c05vbkxlZnRSZWN1cnNpdmVSdWxlcywgIC8vL1xuICAgICAgICAgIGltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlUnVsZSA9IEltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlUnVsZS5mcm9tUnVsZUFuZFByZXZpb3VzUnVsZXMocnVsZSwgcHJldmlvdXNSdWxlcyk7XG5cbiAgICBpZiAoaW1wbGljaXRseUxlZnRSZWN1cnNpdmVSdWxlICE9PSBudWxsKSB7XG4gICAgICBjb25zdCBsZWZ0UmVjdXJzaXZlUnVsZSA9IExlZnRSZWN1cnNpdmVSdWxlLmZyb21JbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZVJ1bGVBbmRQcmV2aW91c1J1bGVzKGltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlUnVsZSwgcHJldmlvdXNSdWxlcyk7XG5cbiAgICAgIHJ1bGUgPSBsZWZ0UmVjdXJzaXZlUnVsZTsgLy8vXG4gICAgfVxuXG4gICAgY29uc3QgbGVmdFJlY3Vyc2l2ZVJ1bGUgPSBMZWZ0UmVjdXJzaXZlUnVsZS5mcm9tUnVsZShydWxlKTtcblxuICAgIGlmIChsZWZ0UmVjdXJzaXZlUnVsZSA9PT0gbnVsbCkge1xuICAgICAgY29uc3Qgbm9uTGVmdFJlY3Vyc2l2ZVJ1bGUgPSBydWxlOyAgLy8vXG5cbiAgICAgIG5vbkxlZnRSZWN1cnNpdmVSdWxlcy5wdXNoKG5vbkxlZnRSZWN1cnNpdmVSdWxlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgcmlnaHRSZWN1cnNpdmVSdWxlID0gUmlnaHRSZWN1cnNpdmVSdWxlLmZyb21MZWZ0UmVjdXJzaXZlUnVsZShsZWZ0UmVjdXJzaXZlUnVsZSksXG4gICAgICAgICAgICBub25MZWZ0UmVjdXJzaXZlUnVsZSA9IE5vbkxlZnRSZWN1cnNpdmVSdWxlLmZyb21MZWZ0UmVjdXJzaXZlUnVsZShsZWZ0UmVjdXJzaXZlUnVsZSk7XG5cbiAgICAgIHJpZ2h0UmVjdXJzaXZlUnVsZXMucHVzaChyaWdodFJlY3Vyc2l2ZVJ1bGUpO1xuXG4gICAgICBub25MZWZ0UmVjdXJzaXZlUnVsZXMucHVzaChub25MZWZ0UmVjdXJzaXZlUnVsZSk7XG4gICAgfVxuICB9KTtcblxuICBydWxlcyA9IFtdLmNvbmNhdChub25MZWZ0UmVjdXJzaXZlUnVsZXMpLmNvbmNhdChyaWdodFJlY3Vyc2l2ZVJ1bGVzKTtcblxuICByZXR1cm4gcnVsZXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZWxpbWluYXRlSW1wbGljaXRMZWZ0UmVjdXJzaW9uO1xuIl19