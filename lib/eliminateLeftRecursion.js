'use strict';

var LeftRecursiveRule = require('./rule/leftRecursive'),
    RightRecursiveRule = require('./rule/rightRecursive'),
    NonLeftRecursiveRule = require('./rule/nonLeftRecursive'),
    ImplicitlyLeftRecursiveRule = require('./rule/implicitlyLeftRecursive');

function eliminateLeftRecursion(rules) {
  var nonLeftRecursiveRules = [],
      rightRecursiveRules = [];

  rules.forEach(function (rule, index) {
    var begin = 0,
        end = index,
        ///
    previousNonLeftRecursiveRules = nonLeftRecursiveRules.slice(begin, end),
        previousRules = previousNonLeftRecursiveRules,
        ///
    implicitlyLeftRecursiveRule = ImplicitlyLeftRecursiveRule.fromRuleAndPreviousRules(rule, previousRules);

    if (implicitlyLeftRecursiveRule !== null) {
      var _leftRecursiveRule = LeftRecursiveRule.fromImplicitlyLeftRecursiveRuleAndPreviousRules(implicitlyLeftRecursiveRule, previousRules);

      rule = _leftRecursiveRule; ///
    }

    var leftRecursiveRule = LeftRecursiveRule.fromRule(rule);

    if (leftRecursiveRule === null) {
      var nonLeftRecursiveRule = rule; ///

      nonLeftRecursiveRules.push(nonLeftRecursiveRule);
    } else {
      var rightRecursiveRule = RightRecursiveRule.fromLeftRecursiveRule(leftRecursiveRule),
          _nonLeftRecursiveRule = NonLeftRecursiveRule.fromLeftRecursiveRule(leftRecursiveRule);

      rightRecursiveRules.push(rightRecursiveRule);

      nonLeftRecursiveRules.push(_nonLeftRecursiveRule);
    }
  });

  rules = [].concat(nonLeftRecursiveRules).concat(rightRecursiveRules);

  return rules;
}

module.exports = eliminateLeftRecursion;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2VzNi9lbGltaW5hdGVMZWZ0UmVjdXJzaW9uLmpzIl0sIm5hbWVzIjpbIkxlZnRSZWN1cnNpdmVSdWxlIiwicmVxdWlyZSIsIlJpZ2h0UmVjdXJzaXZlUnVsZSIsIk5vbkxlZnRSZWN1cnNpdmVSdWxlIiwiSW1wbGljaXRseUxlZnRSZWN1cnNpdmVSdWxlIiwiZWxpbWluYXRlTGVmdFJlY3Vyc2lvbiIsInJ1bGVzIiwibm9uTGVmdFJlY3Vyc2l2ZVJ1bGVzIiwicmlnaHRSZWN1cnNpdmVSdWxlcyIsImZvckVhY2giLCJydWxlIiwiaW5kZXgiLCJiZWdpbiIsImVuZCIsInByZXZpb3VzTm9uTGVmdFJlY3Vyc2l2ZVJ1bGVzIiwic2xpY2UiLCJwcmV2aW91c1J1bGVzIiwiaW1wbGljaXRseUxlZnRSZWN1cnNpdmVSdWxlIiwiZnJvbVJ1bGVBbmRQcmV2aW91c1J1bGVzIiwibGVmdFJlY3Vyc2l2ZVJ1bGUiLCJmcm9tSW1wbGljaXRseUxlZnRSZWN1cnNpdmVSdWxlQW5kUHJldmlvdXNSdWxlcyIsImZyb21SdWxlIiwibm9uTGVmdFJlY3Vyc2l2ZVJ1bGUiLCJwdXNoIiwicmlnaHRSZWN1cnNpdmVSdWxlIiwiZnJvbUxlZnRSZWN1cnNpdmVSdWxlIiwiY29uY2F0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBTUEsb0JBQW9CQyxRQUFRLHNCQUFSLENBQTFCO0FBQUEsSUFDTUMscUJBQXFCRCxRQUFRLHVCQUFSLENBRDNCO0FBQUEsSUFFTUUsdUJBQXVCRixRQUFRLHlCQUFSLENBRjdCO0FBQUEsSUFHTUcsOEJBQThCSCxRQUFRLGdDQUFSLENBSHBDOztBQUtBLFNBQVNJLHNCQUFULENBQWdDQyxLQUFoQyxFQUF1QztBQUNyQyxNQUFNQyx3QkFBd0IsRUFBOUI7QUFBQSxNQUNNQyxzQkFBc0IsRUFENUI7O0FBR0FGLFFBQU1HLE9BQU4sQ0FBYyxVQUFTQyxJQUFULEVBQWVDLEtBQWYsRUFBc0I7QUFDbEMsUUFBTUMsUUFBUSxDQUFkO0FBQUEsUUFDTUMsTUFBTUYsS0FEWjtBQUFBLFFBQ29CO0FBQ2RHLG9DQUFnQ1Asc0JBQXNCUSxLQUF0QixDQUE0QkgsS0FBNUIsRUFBbUNDLEdBQW5DLENBRnRDO0FBQUEsUUFHTUcsZ0JBQWdCRiw2QkFIdEI7QUFBQSxRQUdzRDtBQUNoREcsa0NBQThCYiw0QkFBNEJjLHdCQUE1QixDQUFxRFIsSUFBckQsRUFBMkRNLGFBQTNELENBSnBDOztBQU1BLFFBQUlDLGdDQUFnQyxJQUFwQyxFQUEwQztBQUN4QyxVQUFNRSxxQkFBb0JuQixrQkFBa0JvQiwrQ0FBbEIsQ0FBa0VILDJCQUFsRSxFQUErRkQsYUFBL0YsQ0FBMUI7O0FBRUFOLGFBQU9TLGtCQUFQLENBSHdDLENBR2Q7QUFDM0I7O0FBRUQsUUFBTUEsb0JBQW9CbkIsa0JBQWtCcUIsUUFBbEIsQ0FBMkJYLElBQTNCLENBQTFCOztBQUVBLFFBQUlTLHNCQUFzQixJQUExQixFQUFnQztBQUM5QixVQUFNRyx1QkFBdUJaLElBQTdCLENBRDhCLENBQ007O0FBRXBDSCw0QkFBc0JnQixJQUF0QixDQUEyQkQsb0JBQTNCO0FBQ0QsS0FKRCxNQUlPO0FBQ0wsVUFBTUUscUJBQXFCdEIsbUJBQW1CdUIscUJBQW5CLENBQXlDTixpQkFBekMsQ0FBM0I7QUFBQSxVQUNNRyx3QkFBdUJuQixxQkFBcUJzQixxQkFBckIsQ0FBMkNOLGlCQUEzQyxDQUQ3Qjs7QUFHQVgsMEJBQW9CZSxJQUFwQixDQUF5QkMsa0JBQXpCOztBQUVBakIsNEJBQXNCZ0IsSUFBdEIsQ0FBMkJELHFCQUEzQjtBQUNEO0FBQ0YsR0EzQkQ7O0FBNkJBaEIsVUFBUSxHQUFHb0IsTUFBSCxDQUFVbkIscUJBQVYsRUFBaUNtQixNQUFqQyxDQUF3Q2xCLG1CQUF4QyxDQUFSOztBQUVBLFNBQU9GLEtBQVA7QUFDRDs7QUFFRHFCLE9BQU9DLE9BQVAsR0FBaUJ2QixzQkFBakIiLCJmaWxlIjoiZWxpbWluYXRlTGVmdFJlY3Vyc2lvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTGVmdFJlY3Vyc2l2ZVJ1bGUgPSByZXF1aXJlKCcuL3J1bGUvbGVmdFJlY3Vyc2l2ZScpLFxuICAgICAgUmlnaHRSZWN1cnNpdmVSdWxlID0gcmVxdWlyZSgnLi9ydWxlL3JpZ2h0UmVjdXJzaXZlJyksXG4gICAgICBOb25MZWZ0UmVjdXJzaXZlUnVsZSA9IHJlcXVpcmUoJy4vcnVsZS9ub25MZWZ0UmVjdXJzaXZlJyksXG4gICAgICBJbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZVJ1bGUgPSByZXF1aXJlKCcuL3J1bGUvaW1wbGljaXRseUxlZnRSZWN1cnNpdmUnKTtcblxuZnVuY3Rpb24gZWxpbWluYXRlTGVmdFJlY3Vyc2lvbihydWxlcykge1xuICBjb25zdCBub25MZWZ0UmVjdXJzaXZlUnVsZXMgPSBbXSxcbiAgICAgICAgcmlnaHRSZWN1cnNpdmVSdWxlcyA9IFtdO1xuXG4gIHJ1bGVzLmZvckVhY2goZnVuY3Rpb24ocnVsZSwgaW5kZXgpIHtcbiAgICBjb25zdCBiZWdpbiA9IDAsXG4gICAgICAgICAgZW5kID0gaW5kZXgsICAvLy9cbiAgICAgICAgICBwcmV2aW91c05vbkxlZnRSZWN1cnNpdmVSdWxlcyA9IG5vbkxlZnRSZWN1cnNpdmVSdWxlcy5zbGljZShiZWdpbiwgZW5kKSxcbiAgICAgICAgICBwcmV2aW91c1J1bGVzID0gcHJldmlvdXNOb25MZWZ0UmVjdXJzaXZlUnVsZXMsICAvLy9cbiAgICAgICAgICBpbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZVJ1bGUgPSBJbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZVJ1bGUuZnJvbVJ1bGVBbmRQcmV2aW91c1J1bGVzKHJ1bGUsIHByZXZpb3VzUnVsZXMpO1xuXG4gICAgaWYgKGltcGxpY2l0bHlMZWZ0UmVjdXJzaXZlUnVsZSAhPT0gbnVsbCkge1xuICAgICAgY29uc3QgbGVmdFJlY3Vyc2l2ZVJ1bGUgPSBMZWZ0UmVjdXJzaXZlUnVsZS5mcm9tSW1wbGljaXRseUxlZnRSZWN1cnNpdmVSdWxlQW5kUHJldmlvdXNSdWxlcyhpbXBsaWNpdGx5TGVmdFJlY3Vyc2l2ZVJ1bGUsIHByZXZpb3VzUnVsZXMpO1xuXG4gICAgICBydWxlID0gbGVmdFJlY3Vyc2l2ZVJ1bGU7IC8vL1xuICAgIH1cblxuICAgIGNvbnN0IGxlZnRSZWN1cnNpdmVSdWxlID0gTGVmdFJlY3Vyc2l2ZVJ1bGUuZnJvbVJ1bGUocnVsZSk7XG5cbiAgICBpZiAobGVmdFJlY3Vyc2l2ZVJ1bGUgPT09IG51bGwpIHtcbiAgICAgIGNvbnN0IG5vbkxlZnRSZWN1cnNpdmVSdWxlID0gcnVsZTsgIC8vL1xuXG4gICAgICBub25MZWZ0UmVjdXJzaXZlUnVsZXMucHVzaChub25MZWZ0UmVjdXJzaXZlUnVsZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHJpZ2h0UmVjdXJzaXZlUnVsZSA9IFJpZ2h0UmVjdXJzaXZlUnVsZS5mcm9tTGVmdFJlY3Vyc2l2ZVJ1bGUobGVmdFJlY3Vyc2l2ZVJ1bGUpLFxuICAgICAgICAgICAgbm9uTGVmdFJlY3Vyc2l2ZVJ1bGUgPSBOb25MZWZ0UmVjdXJzaXZlUnVsZS5mcm9tTGVmdFJlY3Vyc2l2ZVJ1bGUobGVmdFJlY3Vyc2l2ZVJ1bGUpO1xuXG4gICAgICByaWdodFJlY3Vyc2l2ZVJ1bGVzLnB1c2gocmlnaHRSZWN1cnNpdmVSdWxlKTtcblxuICAgICAgbm9uTGVmdFJlY3Vyc2l2ZVJ1bGVzLnB1c2gobm9uTGVmdFJlY3Vyc2l2ZVJ1bGUpO1xuICAgIH1cbiAgfSk7XG5cbiAgcnVsZXMgPSBbXS5jb25jYXQobm9uTGVmdFJlY3Vyc2l2ZVJ1bGVzKS5jb25jYXQocmlnaHRSZWN1cnNpdmVSdWxlcyk7XG5cbiAgcmV0dXJuIHJ1bGVzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVsaW1pbmF0ZUxlZnRSZWN1cnNpb247XG4iXX0=