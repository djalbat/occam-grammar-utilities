"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return eliminateLeftRecursion;
    }
});
var _occamParsers = require("occam-parsers");
var _ruleNameGraph = /*#__PURE__*/ _interopRequireDefault(require("./ruleNameGraph"));
var _eliminateDirectLeftRecursion = /*#__PURE__*/ _interopRequireDefault(require("./eliminateDirectLeftRecursion"));
var _eliminateIndirectLeftRecursion = /*#__PURE__*/ _interopRequireDefault(require("./eliminateIndirectLeftRecursion"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var ruleMapFromRules = _occamParsers.rulesUtilities.ruleMapFromRules, startRuleFromRules = _occamParsers.rulesUtilities.startRuleFromRules, rulesFromStartRuleAndRuleMap = _occamParsers.rulesUtilities.rulesFromStartRuleAndRuleMap;
function eliminateLeftRecursion(rules) {
    var ruleMap = ruleMapFromRules(rules), startRule = startRuleFromRules(rules), ruleNameGraph = _ruleNameGraph.default.fromRuleMapAndStartRule(ruleMap, startRule), context = {
        ruleMap: ruleMap,
        ruleNameGraph: ruleNameGraph
    };
    (0, _eliminateIndirectLeftRecursion.default)(context);
    (0, _eliminateDirectLeftRecursion.default)(context);
    rules = rulesFromStartRuleAndRuleMap(startRule, ruleMap); ///
    return rules;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lbGltaW5hdGVMZWZ0UmVjdXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBydWxlc1V0aWxpdGllcyB9IGZyb20gXCJvY2NhbS1wYXJzZXJzXCI7XG5cbmltcG9ydCBSdWxlTmFtZUdyYXBoIGZyb20gXCIuL3J1bGVOYW1lR3JhcGhcIjtcbmltcG9ydCBlbGltaW5hdGVEaXJlY3RMZWZ0UmVjdXJzaW9uIGZyb20gXCIuL2VsaW1pbmF0ZURpcmVjdExlZnRSZWN1cnNpb25cIjtcbmltcG9ydCBlbGltaW5hdGVJbmRpcmVjdExlZnRSZWN1cnNpb24gZnJvbSBcIi4vZWxpbWluYXRlSW5kaXJlY3RMZWZ0UmVjdXJzaW9uXCI7XG5cbmNvbnN0IHsgcnVsZU1hcEZyb21SdWxlcywgc3RhcnRSdWxlRnJvbVJ1bGVzLCBydWxlc0Zyb21TdGFydFJ1bGVBbmRSdWxlTWFwIH0gPSBydWxlc1V0aWxpdGllcztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZWxpbWluYXRlTGVmdFJlY3Vyc2lvbihydWxlcykge1xuICBjb25zdCBydWxlTWFwID0gcnVsZU1hcEZyb21SdWxlcyhydWxlcyksXG4gICAgICAgIHN0YXJ0UnVsZSA9IHN0YXJ0UnVsZUZyb21SdWxlcyhydWxlcyksXG4gICAgICAgIHJ1bGVOYW1lR3JhcGggPSBSdWxlTmFtZUdyYXBoLmZyb21SdWxlTWFwQW5kU3RhcnRSdWxlKHJ1bGVNYXAsIHN0YXJ0UnVsZSksXG4gICAgICAgIGNvbnRleHQgPSB7XG4gICAgICAgICAgcnVsZU1hcCxcbiAgICAgICAgICBydWxlTmFtZUdyYXBoXG4gICAgICAgIH07XG5cbiAgZWxpbWluYXRlSW5kaXJlY3RMZWZ0UmVjdXJzaW9uKGNvbnRleHQpO1xuXG4gIGVsaW1pbmF0ZURpcmVjdExlZnRSZWN1cnNpb24oY29udGV4dCk7XG5cbiAgcnVsZXMgPSBydWxlc0Zyb21TdGFydFJ1bGVBbmRSdWxlTWFwKHN0YXJ0UnVsZSwgcnVsZU1hcCk7IC8vL1xuXG4gIHJldHVybiBydWxlcztcbn1cbiJdLCJuYW1lcyI6WyJlbGltaW5hdGVMZWZ0UmVjdXJzaW9uIiwicnVsZU1hcEZyb21SdWxlcyIsInJ1bGVzVXRpbGl0aWVzIiwic3RhcnRSdWxlRnJvbVJ1bGVzIiwicnVsZXNGcm9tU3RhcnRSdWxlQW5kUnVsZU1hcCIsInJ1bGVzIiwicnVsZU1hcCIsInN0YXJ0UnVsZSIsInJ1bGVOYW1lR3JhcGgiLCJSdWxlTmFtZUdyYXBoIiwiZnJvbVJ1bGVNYXBBbmRTdGFydFJ1bGUiLCJjb250ZXh0IiwiZWxpbWluYXRlSW5kaXJlY3RMZWZ0UmVjdXJzaW9uIiwiZWxpbWluYXRlRGlyZWN0TGVmdFJlY3Vyc2lvbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBVUE7OztlQUF3QkE7Ozs0QkFSTztrRUFFTDtpRkFDZTttRkFDRTs7Ozs7O0FBRTNDLElBQVFDLG1CQUF1RUMsNEJBQWMsQ0FBckZELGtCQUFrQkUscUJBQXFERCw0QkFBYyxDQUFuRUMsb0JBQW9CQywrQkFBaUNGLDRCQUFjLENBQS9DRTtBQUUvQixTQUFTSix1QkFBdUJLLEtBQUssRUFBRTtJQUNwRCxJQUFNQyxVQUFVTCxpQkFBaUJJLFFBQzNCRSxZQUFZSixtQkFBbUJFLFFBQy9CRyxnQkFBZ0JDLHNCQUFhLENBQUNDLHVCQUF1QixDQUFDSixTQUFTQyxZQUMvREksVUFBVTtRQUNSTCxTQUFBQTtRQUNBRSxlQUFBQTtJQUNGO0lBRU5JLElBQUFBLHVDQUE4QixFQUFDRDtJQUUvQkUsSUFBQUEscUNBQTRCLEVBQUNGO0lBRTdCTixRQUFRRCw2QkFBNkJHLFdBQVdELFVBQVUsR0FBRztJQUU3RCxPQUFPRDtBQUNUIn0=