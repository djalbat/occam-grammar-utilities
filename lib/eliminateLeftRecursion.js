"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return eliminateLeftRecursion;
    }
});
var _rules = /*#__PURE__*/ _interopRequireDefault(require("./utilities/rules"));
var _eliminateDirectLeftRecursion = /*#__PURE__*/ _interopRequireDefault(require("./eliminateDirectLeftRecursion"));
var _eliminateIndirectLeftRecursion = /*#__PURE__*/ _interopRequireDefault(require("./eliminateIndirectLeftRecursion"));
var _retrieveLeftRecursiveDefinitions = /*#__PURE__*/ _interopRequireDefault(require("./retrieveLeftRecursiveDefinitions"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var ruleMapFromRules = _rules.default.ruleMapFromRules, startRuleFromRules = _rules.default.startRuleFromRules, rulesFromStartRuleAndRuleMap = _rules.default.rulesFromStartRuleAndRuleMap;
function eliminateLeftRecursion(rules) {
    var startRule = startRuleFromRules(rules), ruleMap = ruleMapFromRules(rules), rule = startRule, recursiveDefinitions = [], leftRecursiveDefinitions = [];
    (0, _retrieveLeftRecursiveDefinitions.default)(rule, recursiveDefinitions, leftRecursiveDefinitions, ruleMap);
    (0, _eliminateIndirectLeftRecursion.default)(leftRecursiveDefinitions, ruleMap);
    (0, _eliminateDirectLeftRecursion.default)(leftRecursiveDefinitions, ruleMap);
    rules = rulesFromStartRuleAndRuleMap(startRule, ruleMap); ///
    return rules;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lbGltaW5hdGVMZWZ0UmVjdXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgcnVsZXNVdGlsaXRpZXMgZnJvbSBcIi4vdXRpbGl0aWVzL3J1bGVzXCI7XG5pbXBvcnQgZWxpbWluYXRlRGlyZWN0TGVmdFJlY3Vyc2lvbiBmcm9tIFwiLi9lbGltaW5hdGVEaXJlY3RMZWZ0UmVjdXJzaW9uXCI7XG5pbXBvcnQgZWxpbWluYXRlSW5kaXJlY3RMZWZ0UmVjdXJzaW9uIGZyb20gXCIuL2VsaW1pbmF0ZUluZGlyZWN0TGVmdFJlY3Vyc2lvblwiO1xuaW1wb3J0IHJldHJpZXZlTGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zIGZyb20gXCIuL3JldHJpZXZlTGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zXCI7XG5cbmNvbnN0IHsgcnVsZU1hcEZyb21SdWxlcywgc3RhcnRSdWxlRnJvbVJ1bGVzLCBydWxlc0Zyb21TdGFydFJ1bGVBbmRSdWxlTWFwIH0gPSBydWxlc1V0aWxpdGllcztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZWxpbWluYXRlTGVmdFJlY3Vyc2lvbihydWxlcykge1xuICBjb25zdCBzdGFydFJ1bGUgPSBzdGFydFJ1bGVGcm9tUnVsZXMocnVsZXMpLFxuICAgICAgICBydWxlTWFwID0gcnVsZU1hcEZyb21SdWxlcyhydWxlcyksXG4gICAgICAgIHJ1bGUgPSBzdGFydFJ1bGUsIC8vL1xuICAgICAgICByZWN1cnNpdmVEZWZpbml0aW9ucyA9IFtdLFxuICAgICAgICBsZWZ0UmVjdXJzaXZlRGVmaW5pdGlvbnMgPSBbXTtcblxuICByZXRyaWV2ZUxlZnRSZWN1cnNpdmVEZWZpbml0aW9ucyhydWxlLCByZWN1cnNpdmVEZWZpbml0aW9ucywgbGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zLCBydWxlTWFwKTtcblxuICBlbGltaW5hdGVJbmRpcmVjdExlZnRSZWN1cnNpb24obGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zLCBydWxlTWFwKTtcblxuICBlbGltaW5hdGVEaXJlY3RMZWZ0UmVjdXJzaW9uKGxlZnRSZWN1cnNpdmVEZWZpbml0aW9ucywgcnVsZU1hcCk7XG5cbiAgcnVsZXMgPSBydWxlc0Zyb21TdGFydFJ1bGVBbmRSdWxlTWFwKHN0YXJ0UnVsZSwgcnVsZU1hcCk7IC8vL1xuXG4gIHJldHVybiBydWxlcztcbn1cbiJdLCJuYW1lcyI6WyJlbGltaW5hdGVMZWZ0UmVjdXJzaW9uIiwicnVsZU1hcEZyb21SdWxlcyIsInJ1bGVzVXRpbGl0aWVzIiwic3RhcnRSdWxlRnJvbVJ1bGVzIiwicnVsZXNGcm9tU3RhcnRSdWxlQW5kUnVsZU1hcCIsInJ1bGVzIiwic3RhcnRSdWxlIiwicnVsZU1hcCIsInJ1bGUiLCJyZWN1cnNpdmVEZWZpbml0aW9ucyIsImxlZnRSZWN1cnNpdmVEZWZpbml0aW9ucyIsInJldHJpZXZlTGVmdFJlY3Vyc2l2ZURlZmluaXRpb25zIiwiZWxpbWluYXRlSW5kaXJlY3RMZWZ0UmVjdXJzaW9uIiwiZWxpbWluYXRlRGlyZWN0TGVmdFJlY3Vyc2lvbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDOzs7OytCQVNiLFNBZ0JDOzs7ZUFoQnVCQSxzQkFBc0I7OzswREFQbkIsbUJBQW1CO2lGQUNMLGdDQUFnQzttRkFDOUIsa0NBQWtDO3FGQUNoQyxvQ0FBb0M7Ozs7OztBQUVqRixJQUFRQyxnQkFBZ0IsR0FBdURDLE1BQWMsUUFBQSxDQUFyRkQsZ0JBQWdCLEVBQUVFLGtCQUFrQixHQUFtQ0QsTUFBYyxRQUFBLENBQW5FQyxrQkFBa0IsRUFBRUMsNEJBQTRCLEdBQUtGLE1BQWMsUUFBQSxDQUEvQ0UsNEJBQTRCLEFBQW9CO0FBRS9FLFNBQVNKLHNCQUFzQixDQUFDSyxLQUFLLEVBQUU7SUFDcEQsSUFBTUMsU0FBUyxHQUFHSCxrQkFBa0IsQ0FBQ0UsS0FBSyxDQUFDLEVBQ3JDRSxPQUFPLEdBQUdOLGdCQUFnQixDQUFDSSxLQUFLLENBQUMsRUFDakNHLElBQUksR0FBR0YsU0FBUyxFQUNoQkcsb0JBQW9CLEdBQUcsRUFBRSxFQUN6QkMsd0JBQXdCLEdBQUcsRUFBRSxBQUFDO0lBRXBDQyxJQUFBQSxpQ0FBZ0MsUUFBQSxFQUFDSCxJQUFJLEVBQUVDLG9CQUFvQixFQUFFQyx3QkFBd0IsRUFBRUgsT0FBTyxDQUFDLENBQUM7SUFFaEdLLElBQUFBLCtCQUE4QixRQUFBLEVBQUNGLHdCQUF3QixFQUFFSCxPQUFPLENBQUMsQ0FBQztJQUVsRU0sSUFBQUEsNkJBQTRCLFFBQUEsRUFBQ0gsd0JBQXdCLEVBQUVILE9BQU8sQ0FBQyxDQUFDO0lBRWhFRixLQUFLLEdBQUdELDRCQUE0QixDQUFDRSxTQUFTLEVBQUVDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRztJQUU3RCxPQUFPRixLQUFLLENBQUM7Q0FDZCJ9